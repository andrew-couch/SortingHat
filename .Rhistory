filter(word1 == "said") %>%
select(word1, word2) %>%
unique() %>%
arrange(word2)
df %>%
unnest_tokens(bigram, `df`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(word1 == "said") %>%
select(word1, word2) %>%
unique() %>%
arrange(word2)
df %>%
unnest_tokens(bigram, `df`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(word1 == "said") %>%
select(word2) %>%
unique() %>%
arrange()
df %>%
unnest_tokens(bigram, `df`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(word1 == "said") %>%
select(word2) %>%
unique() %>%
arrange(word2)
df %>%
unnest_tokens(bigram, `df`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ")
df %>%
unnest_tokens(bigram, `df`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>% select(word1, word2)
bigram <- df %>%
unnest_tokens(bigram, `df`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2)
bigram %>%
filter(word1 == "said")
bigram %>%
filter(word1 == "said") %>%
select(word2) %>%
unique() %>%
arrange()
bigram %>%
filter(word1 == "said") %>%
select(word2) %>%
unique() %>%
arrange(word2)
bigram %>%
filter(word1 == "said") %>%
select(word2) %>%
unique() %>%
rbind(bigram %>%
filter(word2 == "said") %>%
select(word1)) %>% arrange()
bigram %>%
filter(word1 == "said") %>%
select(word2) %>%
unique() %>%
rbind(bigram %>%
filter(word2 == "said") %>%
select(word1))
select(word1)
bigram %>%
filter(word1 == "said") %>%
select(word2) %>%
unique() %>%
rbind(bigram %>%
filter(word2 == "said") %>%
select(word1))
bigram %>%
filter(word1 == "said") %>%
select(word2) %>%
unique() %>%
rbind(bigram %>%
filter(word2 == "said") %>% select(word1))
bigram %>%
filter(word1 == "said") %>%
select(word2) %>%
unique() %>%
rbind(bigram %>%
filter(word2 == "said") %>% select(word1))
bigram %>%
filter(word1 == "said") %>%
select(word2) %>%
unique() %>%
rbind(bigram %>%
filter(word2 == "said") %>% select(word1) %>% unique())
rbind(bigram %>%
filter(word2 == "said") %>% select(word1) %>% unique())
rbind(bigram %>% filter(word2 == "said") %>% select(word1) %>% unique(),
bigram %>% filter(word1 == "said") %>% select(word2) %>% unique())
rbind(bigram %>% filter(word2 == "said") %>% select(word1) %>% unique(),
bigram %>% filter(word1 == "said") %>% select(word2) %>% unique())
rbind(bigram %>% filter(word2 == "said") %>% select(word1)
rbind(bigram %>% filter(word2 == "said") %>% select(word1),
bigram %>% filter(word1 == "said") %>% select(word2))
rbind(bigram %>% filter(word2 == "said") %>% select(word1),
bigram %>% filter(word1 == "said") %>% select(word2))
rbind(bigram %>% filter(word2 == "said") %>% select(word1),
bigram %>% filter(word1 == "said") %>% select(word2))
rbind(bigram %>% filter(word2 == "said") %>% select(word1),
bigram %>% filter(word1 == "said") %>% select(word2))
bigram %>% filter(word1 == "said" | word2 == "said")
bigram %>%
filter(word1 == "said" | word2 == "said") %>% rbind(word1, word2)
bigram %>%
filter(word1 == "said" | word2 == "said") %>% unique(word1, word2)
bigram %>%
filter(word1 == "said" | word2 == "said") %>% unique(word1, word2)
bigram %>%
filter(word1 == "said" | word2 == "said") %>% unique()
bigram %>%
filter(word1 == "said" | word2 == "said") %>% unique() %>% gather()
bigram %>%
filter(word1 == "said" | word2 == "said") %>%
unique() %>%
gather() %>%
select(value)
bigram %>%
filter(word1 == "said" | word2 == "said") %>%
unique() %>%
gather() %>%
select(value) %>%
unique()
bigram %>%
filter(word1 == "said" | word2 == "said") %>%
gather() %>%
select(value) %>%
unique()
bigram %>%
filter(word1 == "said" | word2 == "said")
bigram %>%
filter(word1 == "said" | word2 == "said") %>%
gather()
bigram %>%
filter(word1 == "said" | word2 == "said") %>%
gather() %>%
select(value) %>%
unique() %>%
arrange()
bigram %>%
filter(word1 == "said" | word2 == "said") %>%
gather() %>%
select(value) %>%
unique() %>%
arrange(value)
df %>%
unnest_tokens(bigram, `df`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 == "said" | word2 == "said") %>%
gather() %>%
select(value) %>%
unique() %>%
arrange(value)
df %>% rbind(goblet_of_fire)
df <- df %>% rbind(goblet_of_fire)
rbind(df, goblet_of_fire)
df <- rbind(df, goblet_of_fire)
View(df)
df <- philosophers_stone
df <- as.data.frame(df)
goblet_of_fire <- goblet_of_fire
goblet_of_fire <- as.data.frame(goblet_of_fire)
View(goblet_of_fire)
df <- df %>% rbind(goblet_of_fire)
df <-  rbind(df,goblet_of_fire)
View(goblet_of_fire)
View(df)
df <- philosophers_stone
df <- philosophers_stone %>% as.data.frame()
df <- philosophers_stone %>% as.data.frame()
df %>%
unnest_tokens(bigram, `df`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 == "said" | word2 == "said") %>%
gather() %>%
select(value) %>%
unique() %>%
arrange(value)
View(df)
View(df)
df %>%
unnest_tokens(bigram, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 == "said" | word2 == "said") %>%
gather() %>%
select(value) %>%
unique() %>%
arrange(value)
colnames(df) <- "text"
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 == "said" | word2 == "said") %>%
gather() %>%
select(value) %>%
unique() %>%
arrange(value)
df <- goblet_of_fire %>% as.data.frame()
colnames(df) <- "text"
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 == "said" | word2 == "said") %>%
gather() %>%
select(value) %>%
unique() %>%
arrange(value)
library(rattle)
rattle()
library(rattle)
rattle()
library(tidyverse)
library(tidyverse)
df <- data.frame(house = c("g", "s", "h", "r"), values = (.5,.1,.1,.3))
df <- data.frame(house = c("g", "s", "h", "r"), values = (.5,.1,.1,.3))
df <- data.frame("house" = c("g", "s", "h", "r"), "values" = (.5,.1,.1,.3))
df <- data.frame("house" = c("g", "s", "h", "r"),
"values" = c(.5,.1,.1,.3))
ggplot(data = df, mapping = aes(x = house, y = values)) + geom_bar()
ggplot(data = df, mapping = aes(x = house, y = values)) + geom_col()
ggplot(data = df, mapping = aes(x = house, y = values)) + geom_col() + coord_polar()
ggplot(data = df, mapping = aes(x = house, y = values, color = house)) + geom_col() + coord_polar()
ggplot(data = df, mapping = aes(x = house, y = values, color = house, fill = house)) + geom_col() + coord_polar()
ggplot(data = df, mapping = aes(x = house, y = values, color = house, fill = house)) + geom_line() + coord_polar()
ggplot(data = df, mapping = aes(x = house, y = values, color = house, fill = house, group = house)) + geom_line() + coord_polar()
ggplot(data = df, mapping = aes(x = house, y = values, color = house, fill = house)) + geom_line() + coord_polar()
ggplot(data = df, mapping = aes(x = house, y = values, color = house, fill = house)) + geom_col() + coord_polar()
ggplot(data = df, mapping = aes(x = house, y = values, color = house, fill = house)) + geom_col() + coord_polar(theta = "y")
ggplot(data = df, mapping = aes(x = house, y = values, color = house, fill = house)) + geom_col() + coord_polar(theta = "x")
ggplot(data = df, mapping = aes(x = house, y = values, color = house, fill = house)) + geom_col(width = 1) + coord_polar(theta = "x")
install.packages("ggradar")
library(tidyverse)
df <- data.frame("house" = c("g", "s", "h", "r"),
"values" = c(.5,.1,.1,.3))
ggplot(data = df, mapping = aes(x = house, y = values, color = house, fill = house)) + geom_col(width = 1) + coord_polar(theta = "x")
library(rattle)
rattle()
library(rattle)
rattle()
library(rattle)
rattle()
library(caret)
library(tidyverse)
iris %>% group_by(Species)
harrypotter <- readRDS("harrypotter.rds")
setwd("E:/School/R Work/SortingHat")
harrypotter <- readRDS("harrypotter.rds")
harrypotter$TargetHouse %>% group_by() %>% count()
harrypotter %>%
select(TargetHouse) %>%
count()
harrypotter %>%
select(TargetHouse) %>%
count(TargetHouse, TargetHouse)
harrypotter %>%
select(TargetHouse) %>%
count(TargetHouse, TargetHouse) %>%
qplot()
harrypotter %>%
select(TargetHouse) %>%
count(TargetHouse, TargetHouse) %>%
ggplot(aes(x = TargetHouse, y = n)) + geom_col
harrypotter %>%
select(TargetHouse) %>%
count(TargetHouse, TargetHouse) %>%
ggplot(aes(x = TargetHouse, y = n)) + geom_col()
harrypotter %>%
select(TargetHouse) %>%
count(TargetHouse, TargetHouse) %>%
ggplot(aes(x = TargetHouse, y = n, color = TargetHouse, fill = TargetHouse)) + geom_col()
upSample(harrypotter[,-TargetHouse], harrypotter[,"TargetHouse"])
upSample(harrypotter[,-"TargetHouse"], harrypotter[,"TargetHouse"])
?upSample
data(oil)
oilType
library(caret)
library(tidyverse)
harrypotter <- readRDS("harrypotter.rds")
harrypotter %>%
select(TargetHouse) %>%
count(TargetHouse, TargetHouse) %>%
ggplot(aes(x = TargetHouse, y = n, color = TargetHouse, fill = TargetHouse)) + geom_col()
harrypotter[,-TargetHouse]
harrypotter[,-`TargetHouse`]
harrypotter[,-"TargetHouse"]
harrypotter[,TargetHouse]
harrypotter[,"TargetHouse"]
harrypotter[,-"TargetHouse"]
harrypotter[,-"TargetHouse"]
harrypotter[,"-TargetHouse"]
harrypotter[,"TargetHouse"]
upSample(x = harrypotter %>% select(-TargetHouse),
y = harrypotter$TargetHouse)
harrypotter$TargetHouse <- as.factor(harrypotter$TargetHouse)
upSample(x = harrypotter %>% select(-TargetHouse),
y = harrypotter$TargetHouse)
upSample(x = harrypotter %>% select(-TargetHouse),
y = harrypotter$TargetHouse) %>%
select(TargetHouse) %>%
count(TargetHouse, TargetHouse) %>%
ggplot(aes(x = TargetHouse, y = n, color = TargetHouse, fill = TargetHouse)) + geom_col()
harrypotterUp <- upSample(x = harrypotter %>% select(-TargetHouse),
y = harrypotter$TargetHouse)
harrypotterUp$character
harrypotterUp
harrypotterUp %>% colnames()
harrypotterUp
harrypotterUp <- upSample(x = harrypotter[,-ncol(harrypotter)]),
y = harrypotter$TargetHouse)
harrypotterUp <- upSample(x = harrypotter[,-ncol(harrypotter)], y = harrypotter$TargetHouse)
harrypotterUp$TargetHouse
View(harrypotterUp)
harrypotter$character <- NULL
harrypotter %>%
select(TargetHouse) %>%
count(TargetHouse, TargetHouse) %>%
ggplot(aes(x = TargetHouse, y = n, color = TargetHouse, fill = TargetHouse)) + geom_col()
harrypotterUp <- upSample(x = harrypotter[,-ncol(harrypotter)], y = harrypotter$TargetHouse)
twoClassSim(100, intercept = 20, linearVars = 20)
df <- twoClassSim(100, intercept = 20, linearVars = 20)
df[,-ncol(df)]
harrypotter[,-ncol(harrypotter)]
harrypotterUp <- upSample(x = harrypotter %>% select(-TargetHouse), harrypotter$TargetHouse)
library(caret)
library(tidyverse)
harrypotter <- readRDS("harrypotter.rds")
harrypotter$TargetHouse <- as.factor(harrypotter$TargetHouse)
harrypotter$character <- NULL
harrypotter %>%
select(TargetHouse) %>%
count(TargetHouse, TargetHouse) %>%
ggplot(aes(x = TargetHouse, y = n, color = TargetHouse, fill = TargetHouse)) + geom_col()
harrypotterUp <- upSample(x = harrypotter %>% select(-TargetHouse), harrypotter$TargetHouse)
harrypotter <- readRDS("harrypotter.rds")
harrypotter[1:4,1:4]
harrypotter <- readRDS("harrypotter.rds")
harrypotter$TargetHouse <- as.factor(harrypotter$TargetHouse)
harrypotter$character <- NULL
harrypotter %>%
select(TargetHouse) %>%
count(TargetHouse, TargetHouse) %>%
ggplot(aes(x = TargetHouse, y = n, color = TargetHouse, fill = TargetHouse)) + geom_col()
harrypotterUp <- upSample(x = harrypotter %>% select(-TargetHouse), harrypotter$TargetHouse)
harrypotterUp %>%
select(TargetHouse) %>%
count(TargetHouse, TargetHouse) %>%
ggplot(aes(x = TargetHouse, y = n, color = TargetHouse, fill = TargetHouse)) + geom_col()
harrypotterUp <- upSample(x = harrypotter %>% select(-TargetHouse), y =harrypotter$TargetHouse)
harrypotterUp <- upSample(x = harrypotter %>% select(-TargetHouse), y = harrypotter$TargetHouse)
harrypotterUp %>%
select(TargetHouse) %>%
count(TargetHouse, TargetHouse) %>%
ggplot(aes(x = TargetHouse, y = n, color = TargetHouse, fill = TargetHouse)) + geom_col()
harrypotter[,-"TargetHouse"]
harrypotter[,2:1591]
harrypotterUp <- upSample(x = harrypotter[,2:1591], y = harrypotter$TargetHouse)
upSample()
?upSample
harrypotterUp <- upSample(x = harrypotter[,2:1591], y = harrypotter$TargetHouse, list = TRUE)
harrypotterUp$x
harrypotterUp <- upSample(x = harrypotter[,2:1591], y = harrypotter$TargetHouse, list = FALSE)
harrypotterUp$Class
harrypotterUp %>%
select(Class) %>%
count(Class,Class) %>%
ggplot(aes(x = Class, y = n, color = Class, fill = Class)) + geom_col()
harrypotterUp %>%
select(Class) %>%
count(Class,Class)
harrypotter %>%
count(TargetHouse, TargetHouse)
modelLookup()
test <- train(TargetHouse~., data = harrypotter, method = "glm")
sum(harrypotter %>% is.na())
View(harrypotter)
colSums(harrypotter %>% is.na())
harrypotter$acromantula
library(tidyverse)
library(tidytext)
library(sentimentr)
df <- read.csv("harrypotter.csv", stringsAsFactors = FALSE)
df <- df %>% filter(house != "No Entry")
nameList <- read.csv("namelist.csv")
#writes bag of words list
bow <- df %>%
filter(house != "No Entry") %>%
get_sentences() %>%
unnest_tokens(word, "text") %>%
filter(!word %in% nameList$value,
!str_detect(word, pattern = "[[:digit:]]"),
!str_detect(word, pattern = "[[:punct:]]"),
!str_detect(word, pattern = "(.)\\1{2,}"),
!str_detect(word, pattern = "\\b(.)\\b")) %>%
count(house, word, sort = TRUE) %>%
bind_tf_idf(word, house, n) %>%
group_by(house) %>%
top_n(tf_idf, n = 100) %>%
pull(word) %>%
unique() %>%
sort()
#generates bag of word features
bowFeatures <- df %>%
unnest_tokens(word, "text") %>%
anti_join(stop_words) %>%
filter(word %in%  bow) %>%
count(character, word) %>%
spread(word, n) %>%
map_df(replace_na, 0)
#writes bigram list
bigrams <- df %>%
unnest_tokens(bigram, "text", token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(!word1 %in% nameList$value,
!word2 %in% nameList$value) %>%
unite("bigram", c(word1, word2), sep = " ") %>%
count(house, bigram, sort = TRUE) %>%
bind_tf_idf(bigram, house ,n) %>%
group_by(house) %>%
top_n(tf_idf, n = 100) %>%
pull(bigram) %>%
unique() %>%
sort()
#generates bigram features
bigramFeatures <- df %>%
unnest_tokens(bigram, "text", token = "ngrams", n = 2) %>%
filter(bigram %in% bigrams) %>%
count(character, bigram) %>%
spread(bigram, n) %>%
map_df(replace_na, 0)
#writes trigram list
trigrams <- df %>%
unnest_tokens(trigram, "text", token = "ngrams", n = 3) %>%
separate(trigram, c("word1","word2","word3"), sep = " ") %>%
filter(!word1 %in% nameList$value) %>%
filter(!word2 %in% nameList$value) %>%
filter(!word3 %in% nameList$value) %>%
unite("trigram", c(word1, word2, word3), sep = " ") %>%
count(house, trigram) %>%
bind_tf_idf(house, trigram, n) %>%
group_by(house) %>%
top_n(n, n = 25) %>%
pull(trigram) %>%
unique() %>%
sort()
#generates trigram features
trigramFeatures <- df %>%
unnest_tokens(trigram, "text", token = "ngrams", n = 3) %>%
filter(trigram %in% trigrams) %>%
count(character, trigram) %>%
spread(trigram, n) %>%
map_df(replace_na, 0)
#sentiment lexicon engineering
sentiments <- df %>%
get_sentences() %>%
select(character, text) %>%
cbind(huliu <- sentences %>% sentiment(lexicon::hash_sentiment_huliu) %>% select(sentiment) %>% rename("huliu" = sentiment),jockers_rinker <- sentences %>% sentiment(lexicon::hash_sentiment_jockers_rinker) %>% select(sentiment) %>% rename("jockers_rinker" = sentiment),
nrc <- sentences %>% sentiment(lexicon::hash_sentiment_nrc) %>% select(sentiment) %>% rename("nrc" = sentiment),
senticnet <- sentences %>% sentiment(lexicon::hash_sentiment_senticnet) %>% select(sentiment) %>% rename("senticnet" = sentiment),
sentiword <- sentences %>% sentiment(lexicon::hash_sentiment_sentiword) %>% select(sentiment) %>% rename("sentiword" = sentiment),
slangsd <- sentences %>% sentiment(lexicon::hash_sentiment_slangsd) %>% select(sentiment) %>% rename("slangsd" = sentiment),
socal_google <- sentences %>% sentiment(lexicon::hash_sentiment_socal_google) %>% select(sentiment) %>% rename("socal_google" = sentiment))
#Finds average sentiment for each character
sentiments <-  sentiments %>%
select(-text) %>%
gather(key = "sentiment", value = "score", -character) %>%
group_by(character, sentiment) %>%
summarise(score = mean(score)) %>%
spread(key = sentiment, value = score)
#Generates emotion features
emotions <- lexicon::nrc_emotions
emotionFeatures <- df %>%
get_sentences() %>%
unnest_tokens(word, `text`) %>%
filter(word %in% emotions$term) %>%
left_join(emotions, by = c("word" = "term")) %>%
select(-word) %>%
select(character, anger, anticipation, disgust, fear, joy, sadness, surprise, trust) %>%
group_by(character) %>%
summarise_each(funs(sum)) %>%
left_join(df %>%
unnest_tokens(word, "text") %>%
group_by(character) %>%
count(character, character), by = c("character" = "character")) %>%
gather(key = "sentiment", value = "score", -character, -n) %>%
mutate(score = score/n) %>%
select(-n) %>%
spread(sentiment, score) %>%
rename("anger.emotion" = anger,
"anticipation.emotion" = anticipation,
"digust.emotion" = disgust,
"fear.emotion" = fear,
"joy.emotion" = joy,
"sadness.emotion" = sadness,
"surprise.emotion" = surprise,
"trust.emotion" = trust)
#Creates final df for modeling
harrypotter <- df %>%
select(house,character) %>%
rename("TargetHouse" = house) %>%
unique() %>%
arrange() %>%
left_join(bowFeatures) %>%
left_join(bigramFeatures) %>%
left_join(trigramFeatures) %>%
left_join(sentiments) %>%
left_join(emotionFeatures)
