separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(word1 == "said" | word2 == "said") %>% arrange(word1)
df %>%
unnest_tokens(bigram, `df`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(word1 == "said" | word2 == "said") %>%
select(word1, word2) %>%
arrange() %>%
unique()
df %>%
unnest_tokens(bigram, `df`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(word1 == "said" | word2 == "said") %>%
select(word1, word2) %>%
arrange(word1) %>%
unique()
df %>%
unnest_tokens(bigram, `df`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(word1 == "said") %>%
select(word1, word2) %>%
unique() %>%
arrange(word1)
df %>%
unnest_tokens(bigram, `df`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(word1 == "said") %>%
select(word1, word2) %>%
unique() %>%
arrange(word2)
df %>%
unnest_tokens(bigram, `df`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(word1 == "said") %>%
select(word1, word2) %>%
unique() %>%
arrange(word2)
df %>%
unnest_tokens(bigram, `df`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(word1 == "said") %>%
select(word2) %>%
unique() %>%
arrange()
df %>%
unnest_tokens(bigram, `df`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(word1 == "said") %>%
select(word2) %>%
unique() %>%
arrange(word2)
df %>%
unnest_tokens(bigram, `df`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ")
df %>%
unnest_tokens(bigram, `df`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>% select(word1, word2)
bigram <- df %>%
unnest_tokens(bigram, `df`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2)
bigram %>%
filter(word1 == "said")
bigram %>%
filter(word1 == "said") %>%
select(word2) %>%
unique() %>%
arrange()
bigram %>%
filter(word1 == "said") %>%
select(word2) %>%
unique() %>%
arrange(word2)
bigram %>%
filter(word1 == "said") %>%
select(word2) %>%
unique() %>%
rbind(bigram %>%
filter(word2 == "said") %>%
select(word1)) %>% arrange()
bigram %>%
filter(word1 == "said") %>%
select(word2) %>%
unique() %>%
rbind(bigram %>%
filter(word2 == "said") %>%
select(word1))
select(word1)
bigram %>%
filter(word1 == "said") %>%
select(word2) %>%
unique() %>%
rbind(bigram %>%
filter(word2 == "said") %>%
select(word1))
bigram %>%
filter(word1 == "said") %>%
select(word2) %>%
unique() %>%
rbind(bigram %>%
filter(word2 == "said") %>% select(word1))
bigram %>%
filter(word1 == "said") %>%
select(word2) %>%
unique() %>%
rbind(bigram %>%
filter(word2 == "said") %>% select(word1))
bigram %>%
filter(word1 == "said") %>%
select(word2) %>%
unique() %>%
rbind(bigram %>%
filter(word2 == "said") %>% select(word1) %>% unique())
rbind(bigram %>%
filter(word2 == "said") %>% select(word1) %>% unique())
rbind(bigram %>% filter(word2 == "said") %>% select(word1) %>% unique(),
bigram %>% filter(word1 == "said") %>% select(word2) %>% unique())
rbind(bigram %>% filter(word2 == "said") %>% select(word1) %>% unique(),
bigram %>% filter(word1 == "said") %>% select(word2) %>% unique())
rbind(bigram %>% filter(word2 == "said") %>% select(word1)
rbind(bigram %>% filter(word2 == "said") %>% select(word1),
bigram %>% filter(word1 == "said") %>% select(word2))
rbind(bigram %>% filter(word2 == "said") %>% select(word1),
bigram %>% filter(word1 == "said") %>% select(word2))
rbind(bigram %>% filter(word2 == "said") %>% select(word1),
bigram %>% filter(word1 == "said") %>% select(word2))
rbind(bigram %>% filter(word2 == "said") %>% select(word1),
bigram %>% filter(word1 == "said") %>% select(word2))
bigram %>% filter(word1 == "said" | word2 == "said")
bigram %>%
filter(word1 == "said" | word2 == "said") %>% rbind(word1, word2)
bigram %>%
filter(word1 == "said" | word2 == "said") %>% unique(word1, word2)
bigram %>%
filter(word1 == "said" | word2 == "said") %>% unique(word1, word2)
bigram %>%
filter(word1 == "said" | word2 == "said") %>% unique()
bigram %>%
filter(word1 == "said" | word2 == "said") %>% unique() %>% gather()
bigram %>%
filter(word1 == "said" | word2 == "said") %>%
unique() %>%
gather() %>%
select(value)
bigram %>%
filter(word1 == "said" | word2 == "said") %>%
unique() %>%
gather() %>%
select(value) %>%
unique()
bigram %>%
filter(word1 == "said" | word2 == "said") %>%
gather() %>%
select(value) %>%
unique()
bigram %>%
filter(word1 == "said" | word2 == "said")
bigram %>%
filter(word1 == "said" | word2 == "said") %>%
gather()
bigram %>%
filter(word1 == "said" | word2 == "said") %>%
gather() %>%
select(value) %>%
unique() %>%
arrange()
bigram %>%
filter(word1 == "said" | word2 == "said") %>%
gather() %>%
select(value) %>%
unique() %>%
arrange(value)
df %>%
unnest_tokens(bigram, `df`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 == "said" | word2 == "said") %>%
gather() %>%
select(value) %>%
unique() %>%
arrange(value)
df %>% rbind(goblet_of_fire)
df <- df %>% rbind(goblet_of_fire)
rbind(df, goblet_of_fire)
df <- rbind(df, goblet_of_fire)
View(df)
df <- philosophers_stone
df <- as.data.frame(df)
goblet_of_fire <- goblet_of_fire
goblet_of_fire <- as.data.frame(goblet_of_fire)
View(goblet_of_fire)
df <- df %>% rbind(goblet_of_fire)
df <-  rbind(df,goblet_of_fire)
View(goblet_of_fire)
View(df)
df <- philosophers_stone
df <- philosophers_stone %>% as.data.frame()
df <- philosophers_stone %>% as.data.frame()
df %>%
unnest_tokens(bigram, `df`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 == "said" | word2 == "said") %>%
gather() %>%
select(value) %>%
unique() %>%
arrange(value)
View(df)
View(df)
df %>%
unnest_tokens(bigram, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 == "said" | word2 == "said") %>%
gather() %>%
select(value) %>%
unique() %>%
arrange(value)
colnames(df) <- "text"
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 == "said" | word2 == "said") %>%
gather() %>%
select(value) %>%
unique() %>%
arrange(value)
df <- goblet_of_fire %>% as.data.frame()
colnames(df) <- "text"
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 == "said" | word2 == "said") %>%
gather() %>%
select(value) %>%
unique() %>%
arrange(value)
library(rattle)
rattle()
library(rattle)
rattle()
library(tidyverse)
library(tidyverse)
df <- data.frame(house = c("g", "s", "h", "r"), values = (.5,.1,.1,.3))
df <- data.frame(house = c("g", "s", "h", "r"), values = (.5,.1,.1,.3))
df <- data.frame("house" = c("g", "s", "h", "r"), "values" = (.5,.1,.1,.3))
df <- data.frame("house" = c("g", "s", "h", "r"),
"values" = c(.5,.1,.1,.3))
ggplot(data = df, mapping = aes(x = house, y = values)) + geom_bar()
ggplot(data = df, mapping = aes(x = house, y = values)) + geom_col()
ggplot(data = df, mapping = aes(x = house, y = values)) + geom_col() + coord_polar()
ggplot(data = df, mapping = aes(x = house, y = values, color = house)) + geom_col() + coord_polar()
ggplot(data = df, mapping = aes(x = house, y = values, color = house, fill = house)) + geom_col() + coord_polar()
ggplot(data = df, mapping = aes(x = house, y = values, color = house, fill = house)) + geom_line() + coord_polar()
ggplot(data = df, mapping = aes(x = house, y = values, color = house, fill = house, group = house)) + geom_line() + coord_polar()
ggplot(data = df, mapping = aes(x = house, y = values, color = house, fill = house)) + geom_line() + coord_polar()
ggplot(data = df, mapping = aes(x = house, y = values, color = house, fill = house)) + geom_col() + coord_polar()
ggplot(data = df, mapping = aes(x = house, y = values, color = house, fill = house)) + geom_col() + coord_polar(theta = "y")
ggplot(data = df, mapping = aes(x = house, y = values, color = house, fill = house)) + geom_col() + coord_polar(theta = "x")
ggplot(data = df, mapping = aes(x = house, y = values, color = house, fill = house)) + geom_col(width = 1) + coord_polar(theta = "x")
install.packages("ggradar")
library(tidyverse)
df <- data.frame("house" = c("g", "s", "h", "r"),
"values" = c(.5,.1,.1,.3))
ggplot(data = df, mapping = aes(x = house, y = values, color = house, fill = house)) + geom_col(width = 1) + coord_polar(theta = "x")
setwd("E:/School/R Work/SortingHat")
library(tidyverse)
library(tidytext)
library(sentimentr)
df <- read.csv("harrypotter.csv", stringsAsFactors = FALSE)
sentences <- df %>% get_sentences()
sentiment(sentences, lexicon::constraining_loughran_mcdonald)
sentiment(sentences, lexicon::hash_sentiment_jockers_rinker)
sentiment(sentences %>% head(), lexicon::hash_sentiment_jockers_rinker)
sentiment(sentences %>% head(), lexicon::hash_sentiment_nrc)
sentiment(sentences %>% head(), lexicon::hash_sentiment_nrc) %>% select(sentiment)
lexicon::nrc_emotions
sentiment(sentences %>% head(), lexicon::nrc_emotions
) %>% select(sentiment)
sentiment(sentences %>% head(), lexicon::nrc_emotions)
emotion(sentences %>% head(), lexicon::nrc_emotions)
lexicon::pos_df_irregular_nouns
lexicon::nrc_emotions
lexicon::hash_sentiment_socal_google
lexicon::hash_sentiment_slangsd
lexicon::hash_sentiment_jockers_rinker
lexicon::hash_sentiment_huliu
sentences %>% sentiment(lexicon::hash_sentiment_huliu)
lexicon::nrc_emotions
sentences %>%
unnest_tokens(word, `text`) %>%
filter(word %in% lexicon::nrc_emotions)
emotions <- lexicon::nrc_emotions
sentences %>%
unnest_tokens(word, `text`) %>%
filter(word %in% emotions$term)
sentences %>%
unnest_tokens(word, `text`) %>%
filter(word %in% emotions$term) %>%
left_join(emotions, by = c("word" = "term"))
sentences %>%
unnest_tokens(word, `text`) %>%
filter(word %in% emotions$term) %>%
left_join(emotions, by = c("word" = "term")) %>%
select(-word) %>%
group_by(character)
sentences %>%
unnest_tokens(word, `text`) %>%
filter(word %in% emotions$term) %>%
left_join(emotions, by = c("word" = "term")) %>%
select(-word) %>%
group_by(character) %>%
select(character, anger, anticipation, disgust, fear, joy, sadness, surprise, trust)
sentences %>%
unnest_tokens(word, `text`) %>%
filter(word %in% emotions$term) %>%
left_join(emotions, by = c("word" = "term")) %>%
select(-word) %>%
group_by(character) %>%
select(character, anger, anticipation, disgust, fear, joy, sadness, surprise, trust) %>%
colSums()
sentences %>%
unnest_tokens(word, `text`) %>%
filter(word %in% emotions$term) %>%
left_join(emotions, by = c("word" = "term")) %>%
select(-word) %>%
group_by(character) %>%
select(character, anger, anticipation, disgust, fear, joy, sadness, surprise, trust) %>%
colSums(-character)
sentences %>%
unnest_tokens(word, `text`) %>%
filter(word %in% emotions$term) %>%
left_join(emotions, by = c("word" = "term")) %>%
select(-word) %>%
group_by(character) %>%
select(character, anger, anticipation, disgust, fear, joy, sadness, surprise, trust)
sentences %>%
unnest_tokens(word, `text`) %>%
filter(word %in% emotions$term) %>%
left_join(emotions, by = c("word" = "term")) %>%
select(-word) %>%
select(character, anger, anticipation, disgust, fear, joy, sadness, surprise, trust)
sentences %>%
unnest_tokens(word, `text`) %>%
filter(word %in% emotions$term) %>%
left_join(emotions, by = c("word" = "term")) %>%
select(-word) %>%
select(character, anger, anticipation, disgust, fear, joy, sadness, surprise, trust) %>%
group_by(character) %>%
colSums()
sentences %>%
unnest_tokens(word, `text`) %>%
filter(word %in% emotions$term) %>%
left_join(emotions, by = c("word" = "term")) %>%
select(-word) %>%
select(character, anger, anticipation, disgust, fear, joy, sadness, surprise, trust) %>%
group_by(character) %>%
summarise_each(funs(sum))
sentences
df %>% unnest_tokens(word, "text")
df %>% unnest_tokens(word, "text") %>%
group_by(character) %>%
count(character, character)
sentences %>%
unnest_tokens(word, `text`) %>%
filter(word %in% emotions$term) %>%
left_join(emotions, by = c("word" = "term")) %>%
select(-word) %>%
select(character, anger, anticipation, disgust, fear, joy, sadness, surprise, trust) %>%
group_by(character) %>%
summarise_each(funs(sum)) %>%
left_join(df %>%
unnest_tokens(word, "text") %>%
group_by(character) %>%
count(character, character), by = c("character" = "character"))
sentences %>%
unnest_tokens(word, `text`) %>%
filter(word %in% emotions$term) %>%
left_join(emotions, by = c("word" = "term")) %>%
select(-word) %>%
select(character, anger, anticipation, disgust, fear, joy, sadness, surprise, trust) %>%
group_by(character) %>%
summarise_each(funs(sum)) %>%
left_join(df %>%
unnest_tokens(word, "text") %>%
group_by(character) %>%
count(character, character), by = c("character" = "character")) %>%
gather(character, n)
sentences %>%
unnest_tokens(word, `text`) %>%
filter(word %in% emotions$term) %>%
left_join(emotions, by = c("word" = "term")) %>%
select(-word) %>%
select(character, anger, anticipation, disgust, fear, joy, sadness, surprise, trust) %>%
group_by(character) %>%
summarise_each(funs(sum)) %>%
left_join(df %>%
unnest_tokens(word, "text") %>%
group_by(character) %>%
count(character, character), by = c("character" = "character")) %>%
gather()
sentences %>%
unnest_tokens(word, `text`) %>%
filter(word %in% emotions$term) %>%
left_join(emotions, by = c("word" = "term")) %>%
select(-word) %>%
select(character, anger, anticipation, disgust, fear, joy, sadness, surprise, trust) %>%
group_by(character) %>%
summarise_each(funs(sum)) %>%
left_join(df %>%
unnest_tokens(word, "text") %>%
group_by(character) %>%
count(character, character), by = c("character" = "character")) %>%
gather(key = character, value = value, -n)
sentences %>%
unnest_tokens(word, `text`) %>%
filter(word %in% emotions$term) %>%
left_join(emotions, by = c("word" = "term")) %>%
select(-word) %>%
select(character, anger, anticipation, disgust, fear, joy, sadness, surprise, trust) %>%
group_by(character) %>%
summarise_each(funs(sum)) %>%
left_join(df %>%
unnest_tokens(word, "text") %>%
group_by(character) %>%
count(character, character), by = c("character" = "character")) %>%
gather(key = character)
sentences %>%
unnest_tokens(word, `text`) %>%
filter(word %in% emotions$term) %>%
left_join(emotions, by = c("word" = "term")) %>%
select(-word) %>%
select(character, anger, anticipation, disgust, fear, joy, sadness, surprise, trust) %>%
group_by(character) %>%
summarise_each(funs(sum)) %>%
left_join(df %>%
unnest_tokens(word, "text") %>%
group_by(character) %>%
count(character, character), by = c("character" = "character"))
sentences %>%
unnest_tokens(word, `text`) %>%
filter(word %in% emotions$term) %>%
left_join(emotions, by = c("word" = "term")) %>%
select(-word) %>%
select(character, anger, anticipation, disgust, fear, joy, sadness, surprise, trust) %>%
group_by(character) %>%
summarise_each(funs(sum)) %>%
left_join(df %>%
unnest_tokens(word, "text") %>%
group_by(character) %>%
count(character, character), by = c("character" = "character")) %>%
gather(-n, -character)
sentences %>%
unnest_tokens(word, `text`) %>%
filter(word %in% emotions$term) %>%
left_join(emotions, by = c("word" = "term")) %>%
select(-word) %>%
select(character, anger, anticipation, disgust, fear, joy, sadness, surprise, trust) %>%
group_by(character) %>%
summarise_each(funs(sum)) %>%
left_join(df %>%
unnest_tokens(word, "text") %>%
group_by(character) %>%
count(character, character), by = c("character" = "character")) %>%
gather(character, n)
sentences %>%
unnest_tokens(word, `text`) %>%
filter(word %in% emotions$term) %>%
left_join(emotions, by = c("word" = "term")) %>%
select(-word) %>%
select(character, anger, anticipation, disgust, fear, joy, sadness, surprise, trust) %>%
group_by(character) %>%
summarise_each(funs(sum)) %>%
left_join(df %>%
unnest_tokens(word, "text") %>%
group_by(character) %>%
count(character, character), by = c("character" = "character")) %>%
gather(key = "sentiment", value = "score", -character, -n)
sentences %>%
unnest_tokens(word, `text`) %>%
filter(word %in% emotions$term) %>%
left_join(emotions, by = c("word" = "term")) %>%
select(-word) %>%
select(character, anger, anticipation, disgust, fear, joy, sadness, surprise, trust) %>%
group_by(character) %>%
summarise_each(funs(sum)) %>%
left_join(df %>%
unnest_tokens(word, "text") %>%
group_by(character) %>%
count(character, character), by = c("character" = "character")) %>%
gather(key = "sentiment", value = "score", -character, -n) %>%
mutate(score = score/n)
sentences %>%
unnest_tokens(word, `text`) %>%
filter(word %in% emotions$term) %>%
left_join(emotions, by = c("word" = "term")) %>%
select(-word) %>%
select(character, anger, anticipation, disgust, fear, joy, sadness, surprise, trust) %>%
group_by(character) %>%
summarise_each(funs(sum)) %>%
left_join(df %>%
unnest_tokens(word, "text") %>%
group_by(character) %>%
count(character, character), by = c("character" = "character")) %>%
gather(key = "sentiment", value = "score", -character, -n) %>%
mutate(score = score/n) %>%
select(-n) %>%
spread(sentiment, score)
lexicon::hash_sentiment_slangsd
source('E:/School/R Work/SortingHat/Sorting Hat Feature Engineering.R')
