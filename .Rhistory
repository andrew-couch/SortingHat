group_by(house) %>%
top_n(tf_idf, n = 10) %>%
rename("house" = house, "bigram" = bigram, "value" = tf_idf) %>%
mutate(type = "tf-idf") %>%
rbind(bigram %>%
group_by(house) %>%
top_n(n, n =10) %>%
rename("house" = house, "bigram" = bigram, "value" = n) %>%
mutate(type = "ngram")) %>%
ggplot(mapping = aes(x = reorder_within(bigram, value, house),
y = value,
color = house, fill = house)) +
geom_col() +
scale_x_reordered() +
facet_wrap(~type + house, scales = "free") + coord_flip()
#Plot comparing top 10 words from tf-idf and bow
df %>%
get_sentences() %>%
unnest_tokens(word, "text") %>%
filter(!word %in% names$value) %>%
filter(!word %in% stop_words$word) %>%
count(house, word, sort = TRUE) %>%
bind_tf_idf(word, house, n) %>%
group_by(house) %>%
top_n(tf_idf, n = 10)
#Plot comparing top 10 words from tf-idf and bow
df %>%
get_sentences() %>%
unnest_tokens(word, "text") %>%
filter(!word %in% names$value) %>%
filter(!word %in% stop_words$word) %>%
count(house, word, sort = TRUE) %>%
bind_tf_idf(word, house, n) %>%
group_by(house) %>%
top_n(tf_idf, n = 10) %>%
select(house, word, tf_idf) %>%
mutate(type = "tf-idf") %>%
rename("value" = tf_idf)
df %>%
get_sentences() %>%
unnest_tokens(word, "text") %>%
filter(!word %in% names$value) %>%
filter(!word %in% stop_words$word) %>%
group_by(house) %>%
count(house, word) %>%
top_n(n, n = 10)
df %>%
get_sentences() %>%
unnest_tokens(word, "text") %>%
filter(!word %in% names$value) %>%
filter(!word %in% stop_words$word) %>%
group_by(house) %>%
count(house, word) %>%
top_n(n, n = 10) %>%
mutate(type = "bow") %>%
rename("value" = n)
rbind(df %>%
get_sentences() %>%
unnest_tokens(word, "text") %>%
filter(!word %in% names$value) %>%
filter(!word %in% stop_words$word) %>%
count(house, word, sort = TRUE) %>%
bind_tf_idf(word, house, n) %>%
group_by(house) %>%
top_n(tf_idf, n = 10) %>%
select(house, word, tf_idf) %>%
mutate(type = "tf-idf") %>%
rename("value" = tf_idf), df %>%
get_sentences() %>%
unnest_tokens(word, "text") %>%
filter(!word %in% names$value) %>%
filter(!word %in% stop_words$word) %>%
group_by(house) %>%
count(house, word) %>%
top_n(n, n = 10) %>%
mutate(type = "bow") %>%
rename("value" = n)) %>%
ggplot(mapping = aes(x = reorder_within(word, value, house), y = value, color = house, fill = house)) + geom_col() +
scale_x_reordered() + facet_wrap(~type + house, scales = "free") + coord_flip()
library(tidyverse)
library(tidytext)
library(sentimentr)
df <- read.csv("harrypotter.csv", stringsAsFactors = FALSE)
df <- df %>% filter(house != "No Entry")
names <- read.csv("namelist.csv")
rbind(df %>%
get_sentences() %>%
unnest_tokens(word, "text") %>%
filter(!word %in% names$value) %>%
filter(!word %in% stop_words$word) %>%
count(house, word, sort = TRUE) %>%
bind_tf_idf(word, house, n) %>%
group_by(house) %>%
top_n(tf_idf, n = 10) %>%
select(house, word, tf_idf) %>%
mutate(type = "tf-idf") %>%
rename("value" = tf_idf), df %>%
get_sentences() %>%
unnest_tokens(word, "text") %>%
filter(!word %in% names$value) %>%
filter(!word %in% stop_words$word) %>%
group_by(house) %>%
count(house, word) %>%
top_n(n, n = 10) %>%
mutate(type = "bow") %>%
rename("value" = n)) %>%
ggplot(mapping = aes(x = reorder_within(word, value, house), y = value, color = house, fill = house)) +
geom_col() +
scale_x_reordered() +
facet_wrap(~type + house, scales = "free") +
coord_flip()
rbind(df %>%
get_sentences() %>%
unnest_tokens(word, "text") %>%
filter(!word %in% names$value) %>%
filter(!word %in% stop_words$word) %>%
count(house, word, sort = TRUE) %>%
bind_tf_idf(word, house, n) %>%
group_by(house) %>%
top_n(tf_idf, n = 10) %>%
select(house, word, tf_idf) %>%
mutate(type = "tf-idf") %>%
rename("value" = tf_idf),
df %>%
get_sentences() %>%
unnest_tokens(word, "text") %>%
filter(!word %in% names$value) %>%
filter(!word %in% stop_words$word) %>%
group_by(house) %>%
count(house, word) %>%
top_n(n, n = 10) %>%
mutate(type = "bow") %>%
rename("value" = n)) %>%
ggplot(mapping = aes(x = reorder_within(word, value, type), y = value, color = house, fill = house)) +
geom_col() +
scale_x_reordered() +
facet_wrap(~type + house, scales = "free") +
coord_flip()
rbind(df %>%
get_sentences() %>%
unnest_tokens(word, "text") %>%
filter(!word %in% names$value) %>%
filter(!word %in% stop_words$word) %>%
count(house, word, sort = TRUE) %>%
bind_tf_idf(word, house, n) %>%
group_by(house) %>%
top_n(tf_idf, n = 10) %>%
select(house, word, tf_idf) %>%
mutate(type = "tf-idf") %>%
rename("value" = tf_idf),
df %>%
get_sentences() %>%
unnest_tokens(word, "text") %>%
filter(!word %in% names$value) %>%
filter(!word %in% stop_words$word) %>%
group_by(house) %>%
count(house, word) %>%
top_n(n, n = 10) %>%
mutate(type = "bow") %>%
rename("value" = n)) %>%
ggplot(mapping = aes(x = reorder_within(word, value, house), y = value, color = house, fill = house)) +
geom_col() +
scale_x_reordered() +
facet_wrap(~type + house, scales = "free") +
coord_flip()
rbind(df %>%
get_sentences() %>%
unnest_tokens(word, "text") %>%
filter(!word %in% names$value) %>%
filter(!word %in% stop_words$word) %>%
count(house, word, sort = TRUE) %>%
bind_tf_idf(word, house, n) %>%
group_by(house) %>%
top_n(tf_idf, n = 10) %>%
select(house, word, tf_idf) %>%
mutate(type = "tf-idf") %>%
rename("value" = tf_idf),
df %>%
get_sentences() %>%
unnest_tokens(word, "text") %>%
filter(!word %in% names$value) %>%
filter(!word %in% stop_words$word) %>%
group_by(house) %>%
count(house, word) %>%
top_n(n, n = 10) %>%
mutate(type = "bow") %>%
rename("value" = n)) %>%
ggplot(mapping = aes(x = reorder_within(word, value, house), y = value, color = house, fill = house)) +
geom_col() +
scale_x_reordered() +
facet_grid(rows = vars(type), cols = vars(house), scales = "free") +
coord_flip()
rbind(df %>%
get_sentences() %>%
unnest_tokens(word, "text") %>%
filter(!word %in% names$value) %>%
filter(!word %in% stop_words$word) %>%
count(house, word, sort = TRUE) %>%
bind_tf_idf(word, house, n) %>%
group_by(house) %>%
top_n(tf_idf, n = 10) %>%
select(house, word, tf_idf) %>%
mutate(type = "tf-idf") %>%
rename("value" = tf_idf),
df %>%
get_sentences() %>%
unnest_tokens(word, "text") %>%
filter(!word %in% names$value) %>%
filter(!word %in% stop_words$word) %>%
group_by(house) %>%
count(house, word) %>%
top_n(n, n = 10) %>%
mutate(type = "bow") %>%
rename("value" = n)) %>%
ggplot(mapping = aes(x = reorder_within(word, value, house), y = value, color = house, fill = house)) +
geom_col() +
scale_x_reordered() +
facet_grid(rows = vars(type), cols = vars(house), scales = "free_x") +
coord_flip()
rbind(df %>%
get_sentences() %>%
unnest_tokens(word, "text") %>%
filter(!word %in% names$value) %>%
filter(!word %in% stop_words$word) %>%
count(house, word, sort = TRUE) %>%
bind_tf_idf(word, house, n) %>%
group_by(house) %>%
top_n(tf_idf, n = 10) %>%
select(house, word, tf_idf) %>%
mutate(type = "tf-idf") %>%
rename("value" = tf_idf),
df %>%
get_sentences() %>%
unnest_tokens(word, "text") %>%
filter(!word %in% names$value) %>%
filter(!word %in% stop_words$word) %>%
group_by(house) %>%
count(house, word) %>%
top_n(n, n = 10) %>%
mutate(type = "bow") %>%
rename("value" = n)) %>%
ggplot(mapping = aes(x = reorder_within(word, value, house), y = value, color = house, fill = house)) +
geom_col() +
scale_x_reordered() +
facet_grid(rows = vars(type), cols = vars(house), scales = "free_y") +
coord_flip()
rbind(df %>%
get_sentences() %>%
unnest_tokens(word, "text") %>%
filter(!word %in% names$value) %>%
filter(!word %in% stop_words$word) %>%
count(house, word, sort = TRUE) %>%
bind_tf_idf(word, house, n) %>%
group_by(house) %>%
top_n(tf_idf, n = 10) %>%
select(house, word, tf_idf) %>%
mutate(type = "tf-idf") %>%
rename("value" = tf_idf),
df %>%
get_sentences() %>%
unnest_tokens(word, "text") %>%
filter(!word %in% names$value) %>%
filter(!word %in% stop_words$word) %>%
group_by(house) %>%
count(house, word) %>%
top_n(n, n = 10) %>%
mutate(type = "bow") %>%
rename("value" = n)) %>%
ggplot(mapping = aes(x = reorder_within(word, value, house), y = value, color = house, fill = house)) +
geom_col() +
scale_x_reordered() +
facet_wrap(~type + house, scales = "free") +
coord_flip()
options(scipen = 999)
rbind(df %>%
get_sentences() %>%
unnest_tokens(word, "text") %>%
filter(!word %in% names$value) %>%
filter(!word %in% stop_words$word) %>%
count(house, word, sort = TRUE) %>%
bind_tf_idf(word, house, n) %>%
group_by(house) %>%
top_n(tf_idf, n = 10) %>%
select(house, word, tf_idf) %>%
mutate(type = "tf-idf") %>%
rename("value" = tf_idf),
df %>%
get_sentences() %>%
unnest_tokens(word, "text") %>%
filter(!word %in% names$value) %>%
filter(!word %in% stop_words$word) %>%
group_by(house) %>%
count(house, word) %>%
top_n(n, n = 10) %>%
mutate(type = "bow") %>%
rename("value" = n)) %>%
ggplot(mapping = aes(x = reorder_within(word, value, house), y = value, color = house, fill = house)) +
geom_col() +
scale_x_reordered() +
facet_wrap(~type + house, scales = "free") +
coord_flip()
rbind(df %>%
get_sentences() %>%
unnest_tokens(word, "text") %>%
filter(!word %in% names$value) %>%
filter(!word %in% stop_words$word) %>%
count(house, word, sort = TRUE) %>%
bind_tf_idf(word, house, n) %>%
group_by(house) %>%
top_n(tf_idf, n = 10) %>%
select(house, word, tf_idf) %>%
mutate(type = "tf-idf") %>%
rename("value" = tf_idf),
df %>%
get_sentences() %>%
unnest_tokens(word, "text") %>%
filter(!word %in% names$value) %>%
filter(!word %in% stop_words$word) %>%
group_by(house) %>%
count(house, word) %>%
top_n(n, n = 10) %>%
mutate(type = "bow") %>%
rename("value" = n)) %>%
ggplot(mapping = aes(x = reorder_within(word, value, house), y = value, color = house, fill = house)) +
geom_col() +
scale_x_reordered() +
facet_wrap(~type + house, scales = "free", ncol = 2) +
coord_flip()
rbind(df %>%
get_sentences() %>%
unnest_tokens(word, "text") %>%
filter(!word %in% names$value) %>%
filter(!word %in% stop_words$word) %>%
count(house, word, sort = TRUE) %>%
bind_tf_idf(word, house, n) %>%
group_by(house) %>%
top_n(tf_idf, n = 10) %>%
select(house, word, tf_idf) %>%
mutate(type = "tf-idf") %>%
rename("value" = tf_idf),
df %>%
get_sentences() %>%
unnest_tokens(word, "text") %>%
filter(!word %in% names$value) %>%
filter(!word %in% stop_words$word) %>%
group_by(house) %>%
count(house, word) %>%
top_n(n, n = 10) %>%
mutate(type = "bow") %>%
rename("value" = n)) %>%
ggplot(mapping = aes(x = reorder_within(word, value, house), y = value, color = house, fill = house)) +
geom_col() +
scale_x_reordered() +
facet_wrap(type~house, scales = "free", ncol = 2) +
coord_flip()
rbind(df %>%
get_sentences() %>%
unnest_tokens(word, "text") %>%
filter(!word %in% names$value) %>%
filter(!word %in% stop_words$word) %>%
count(house, word, sort = TRUE) %>%
bind_tf_idf(word, house, n) %>%
group_by(house) %>%
top_n(tf_idf, n = 10) %>%
select(house, word, tf_idf) %>%
mutate(type = "tf-idf") %>%
rename("value" = tf_idf),
df %>%
get_sentences() %>%
unnest_tokens(word, "text") %>%
filter(!word %in% names$value) %>%
filter(!word %in% stop_words$word) %>%
group_by(house) %>%
count(house, word) %>%
top_n(n, n = 10) %>%
mutate(type = "bow") %>%
rename("value" = n)) %>%
ggplot(mapping = aes(x = reorder_within(word, value, house), y = value, color = house, fill = house)) +
geom_col() +
scale_x_reordered() +
facet_wrap(type~house, scales = "free") +
coord_flip()
rbind(df %>%
get_sentences() %>%
unnest_tokens(word, "text") %>%
filter(!word %in% names$value) %>%
filter(!word %in% stop_words$word) %>%
count(house, word, sort = TRUE) %>%
bind_tf_idf(word, house, n) %>%
group_by(house) %>%
top_n(tf_idf, n = 10) %>%
select(house, word, tf_idf) %>%
mutate(type = "tf-idf") %>%
rename("value" = tf_idf),
df %>%
get_sentences() %>%
unnest_tokens(word, "text") %>%
filter(!word %in% names$value) %>%
filter(!word %in% stop_words$word) %>%
group_by(house) %>%
count(house, word) %>%
top_n(n, n = 10) %>%
mutate(type = "bow") %>%
rename("value" = n)) %>%
ggplot(mapping = aes(x = reorder_within(word, value, house), y = value, color = house, fill = house)) +
geom_col() +
scale_x_reordered() +
facet_wrap(house~type, scales = "free") +
coord_flip()
rbind(df %>%
get_sentences() %>%
unnest_tokens(word, "text") %>%
filter(!word %in% names$value) %>%
filter(!word %in% stop_words$word) %>%
count(house, word, sort = TRUE) %>%
bind_tf_idf(word, house, n) %>%
group_by(house) %>%
top_n(tf_idf, n = 10) %>%
select(house, word, tf_idf) %>%
mutate(type = "tf-idf") %>%
rename("value" = tf_idf),
df %>%
get_sentences() %>%
unnest_tokens(word, "text") %>%
filter(!word %in% names$value) %>%
filter(!word %in% stop_words$word) %>%
group_by(house) %>%
count(house, word) %>%
top_n(n, n = 10) %>%
mutate(type = "bow") %>%
rename("value" = n)) %>%
ggplot(mapping = aes(x = reorder_within(word, value, house), y = value, color = house, fill = house)) +
geom_col() +
scale_x_reordered() +
facet_wrap(~house + type, scales = "free") +
coord_flip()
rbind(df %>%
get_sentences() %>%
unnest_tokens(word, "text") %>%
filter(!word %in% names$value) %>%
filter(!word %in% stop_words$word) %>%
count(house, word, sort = TRUE) %>%
bind_tf_idf(word, house, n) %>%
group_by(house) %>%
top_n(tf_idf, n = 10) %>%
select(house, word, tf_idf) %>%
mutate(type = "tf-idf") %>%
rename("value" = tf_idf),
df %>%
get_sentences() %>%
unnest_tokens(word, "text") %>%
filter(!word %in% names$value) %>%
filter(!word %in% stop_words$word) %>%
group_by(house) %>%
count(house, word) %>%
top_n(n, n = 10) %>%
mutate(type = "bow") %>%
rename("value" = n)) %>%
ggplot(mapping = aes(x = reorder_within(word, value, house), y = value, color = house, fill = house)) +
geom_col() +
scale_x_reordered() +
facet_wrap(~ type + house, scales = "free") +
coord_flip()
rbind(df %>%
get_sentences() %>%
unnest_tokens(word, "text") %>%
filter(!word %in% names$value) %>%
filter(!word %in% stop_words$word) %>%
count(house, word, sort = TRUE) %>%
bind_tf_idf(word, house, n) %>%
group_by(house) %>%
top_n(tf_idf, n = 10) %>%
select(house, word, tf_idf) %>%
mutate(type = "tf-idf") %>%
rename("value" = tf_idf),
df %>%
get_sentences() %>%
unnest_tokens(word, "text") %>%
filter(!word %in% names$value) %>%
filter(!word %in% stop_words$word) %>%
group_by(house) %>%
count(house, word) %>%
top_n(n, n = 10) %>%
mutate(type = "bow") %>%
rename("value" = n)) %>%
ggplot(mapping = aes(x = reorder_within(word, value, house),
y = value,
color = house,
fill = house)) +
geom_col() +
scale_x_reordered() +
facet_wrap(~ type + house,
scales = "free", ncol = 2) +
coord_flip()
#sentiment tf-idf
df %>%
get_sentences() %>%
unnest_tokens(word, "text") %>%
filter(!word %in% names$value) %>%
filter(!word %in% stop_words$word) %>%
count(house, word, sort = TRUE) %>%
bind_tf_idf(word, house, n) %>%
group_by(house)
#sentiment tf-idf
tfidf <-  df %>%
get_sentences() %>%
unnest_tokens(word, "text") %>%
filter(!word %in% names$value) %>%
filter(!word %in% stop_words$word) %>%
count(house, word, sort = TRUE) %>%
bind_tf_idf(word, house, n) %>%
group_by(house)
