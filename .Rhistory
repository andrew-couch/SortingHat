arrange(value) %>%
anti_join(stop_words, by = c("value" = "word")) %>%
filter(substr(value, start = nchar(value), stop = nchar(value)) == "d") %>%
select(value) %>%
anti_join(dialogueVerbs, by = c("dialogueVerbs" = "value"))
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 == "ron" | word2 == "ron") %>%
gather() %>%
select(value) %>%
unique() %>%
arrange(value) %>%
anti_join(stop_words, by = c("value" = "word")) %>%
filter(substr(value, start = nchar(value), stop = nchar(value)) == "d") %>%
select(value) %>%
anti_join(dialogueVerbs, by = c("value" = "dialogueVerbs"))
rbind(dialogueVerbs, c("added","breathed","barked","breathed","chortled","demanded","exchanged","exclaimed","intervened","moaned","mumbled","offered","retorted","shocked","sighed","sneered","spluttered","suggested")) %>% nrow()
rbind(dialogueVerbs, c("added","breathed","barked","breathed","chortled","demanded","exchanged","exclaimed","intervened","moaned","mumbled","offered","retorted","shocked","sighed","sneered","spluttered","suggested"))
addedWords <- c("added","breathed","barked","breathed","chortled","demanded","exchanged","exclaimed","intervened","moaned","mumbled","offered","retorted","shocked","sighed","sneered","spluttered","suggested") %>% as.data.frame()
rbind(dialogueVerbs, addedWords)
View(dialogueVerbs)
View(addedWords)
rbind(dialogueVerbs, addedWords)
rbind_list(dialogueVerbs, addedWords)
rbind(dialogueVerbs, addedWords)
dialogueVerbs <- c("accused", "agreed", "announced", "answered", "argued", "assured","begged","blurted","called","challenged","cheered","confessed","convinced","cried","decided","echoed","explained","fretted","gasped","guessed","hissed","imitated","informed","interjected","interrupted","japped","persuaded","promised","prompted","protested","read","replied","responded","retold","roared","scowled","screamed","screeched","shared","shouted","shurgged","snarled","sniggered","snorted","squeled","squeaked","stammered","said","told","voiced","wailed","whimpered","whispered","worried","yawned","yelled","yelped")
addedWords <- c("added","breathed","barked","breathed","chortled","demanded","exchanged","exclaimed","intervened","moaned","mumbled","offered","retorted","shocked","sighed","sneered","spluttered","suggested")
append(dialogueVerbs, addedWords)
append(dialogueVerbs, addedWords) %>% length()
length(dialogueVerbs)
dialogueVerbs <- append(dialogueVerbs, addedWords) %>% length()
dialogueVerbs <- c("accused", "agreed", "announced", "answered", "argued", "assured","begged","blurted","called","challenged","cheered","confessed","convinced","cried","decided","echoed","explained","fretted","gasped","guessed","hissed","imitated","informed","interjected","interrupted","japped","persuaded","promised","prompted","protested","read","replied","responded","retold","roared","scowled","screamed","screeched","shared","shouted","shurgged","snarled","sniggered","snorted","squeled","squeaked","stammered","said","told","voiced","wailed","whimpered","whispered","worried","yawned","yelled","yelped")
dialogueVerbs <- as.data.frame(dialogueVerbs)
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 == "ron" | word2 == "ron") %>%
gather() %>%
select(value) %>%
unique() %>%
arrange(value) %>%
anti_join(stop_words, by = c("value" = "word")) %>%
filter(substr(value, start = nchar(value), stop = nchar(value)) == "d") %>%
select(value) %>%
anti_join(dialogueVerbs, by = c("value" = "dialogueVerbs"))
addedWords <- c("added","breathed","barked","breathed","chortled","demanded","exchanged","exclaimed","intervened","moaned","mumbled","offered","retorted","shocked","sighed","sneered","spluttered","suggested") %>% as.data.frame()
colnames(addedWords) <- "dialogueVerbs"
rbind(dialogueVerbs, addedWords)
dialogueVerbs <-  rbind(dialogueVerbs, addedWords)
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 == "hermoine" | word2 == "hermoine") %>%
gather() %>%
select(value) %>%
unique() %>%
arrange(value) %>%
anti_join(stop_words, by = c("value" = "word")) %>%
filter(substr(value, start = nchar(value), stop = nchar(value)) == "d") %>%
select(value) %>%
anti_join(dialogueVerbs, by = c("value" = "dialogueVerbs"))
View(dialogueVerbs)
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 == "hermoine" | word2 == "hermoine") %>%
gather() %>%
select(value) %>%
unique() %>%
arrange(value) %>%
anti_join(stop_words, by = c("value" = "word")) %>%
filter(substr(value, start = nchar(value), stop = nchar(value)) == "d") %>%
select(value)
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 == "malfoy" | word2 == "malfoy") %>%
gather() %>%
select(value) %>%
unique() %>%
arrange(value) %>%
anti_join(stop_words, by = c("value" = "word")) %>%
filter(substr(value, start = nchar(value), stop = nchar(value)) == "d") %>%
select(value)
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 == "hermione" | word2 == "hermione") %>%
gather() %>%
select(value) %>%
unique() %>%
arrange(value) %>%
anti_join(stop_words, by = c("value" = "word")) %>%
filter(substr(value, start = nchar(value), stop = nchar(value)) == "d") %>%
select(value) %>%
anti_join(dialogueVerbs, by = c("value" = "dialogueVerbs"))
addedWords <- c("added","bemused","bickered","choked","cooed","elaborated","giggled","groaned","jeered","laughed","mentioned","murmured","muttered","reminded","scoffed","shrieked","squealed","talked","warned","winced")
addedWords <- c("added","bemused","bickered","choked","cooed","elaborated","giggled","groaned","jeered","laughed","mentioned","murmured","muttered","reminded","scoffed","shrieked","squealed","talked","warned","winced") %>% as.data.frame()
colnames(addedWords) <- "dialogueVerbs"
rbind(dialogueVerbs, addedWords)
dialogueVerbs <-  rbind(dialogueVerbs, addedWords)
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 == "malfoy" | word2 == "malfoy") %>%
gather() %>%
select(value) %>%
unique() %>%
arrange(value) %>%
anti_join(stop_words, by = c("value" = "word")) %>%
filter(substr(value, start = nchar(value), stop = nchar(value)) == "d") %>%
select(value) %>%
anti_join(dialogueVerbs, by = c("value" = "dialogueVerbs"))
addedWords <- c("bawled","bellowed","chuckled","howled","mouthed")
addedWords <- c("bawled","bellowed","chuckled","howled","mouthed") %>% as.data.frame()
colnames(addedWords) <- "dialogueVerbs"
dialogueVerbs <- rbind(dialogueVerbs, addedWords))
dialogueVerbs <- rbind(dialogueVerbs, addedWords)
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 %in% dialogueVerbs | word2 %in% dialogueVerbs) %>%
gather()
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 %in% dialogueVerbs$dialogueVerbs | word2 %in% dialogueVerbs$dialogueVerbs) %>%
gather()
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 %in% dialogueVerbs$dialogueVerbs | word2 %in% dialogueVerbs$dialogueVerbs) %>%
gather() %>%
select(value) %>%
filter(value %in% dialogueVerbs$dialogueVerbs)
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 %in% dialogueVerbs$dialogueVerbs | word2 %in% dialogueVerbs$dialogueVerbs) %>%
gather() %>%
select(value) %>%
filter(!value %in% dialogueVerbs$dialogueVerbs)
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 %in% dialogueVerbs$dialogueVerbs | word2 %in% dialogueVerbs$dialogueVerbs) %>%
gather() %>%
select(value) %>%
filter(!value %in% dialogueVerbs$dialogueVerbs) %>%
unique()
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 %in% dialogueVerbs$dialogueVerbs | word2 %in% dialogueVerbs$dialogueVerbs) %>%
gather() %>%
select(value) %>%
filter(!value %in% dialogueVerbs$dialogueVerbs) %>%
unique() %>%
arrange()
#Finds characters by using bigrams, if word has said than it could be harry said or said harry
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 %in% dialogueVerbs$dialogueVerbs | word2 %in% dialogueVerbs$dialogueVerbs) %>%
gather() %>%
select(value) %>%
filter(!value %in% dialogueVerbs$dialogueVerbs) %>%
unique() %>%
arrange(Value)
#Finds characters by using bigrams, if word has said than it could be harry said or said harry
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 %in% dialogueVerbs$dialogueVerbs | word2 %in% dialogueVerbs$dialogueVerbs) %>%
gather() %>%
select(value) %>%
filter(!value %in% dialogueVerbs$dialogueVerbs) %>%
unique() %>%
anti_join(stop_words, by = ("word" = "value")) %>%
arrange(value)
#Finds characters by using bigrams, if word has said than it could be harry said or said harry
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 %in% dialogueVerbs$dialogueVerbs | word2 %in% dialogueVerbs$dialogueVerbs) %>%
gather() %>%
select(value) %>%
filter(!value %in% dialogueVerbs$dialogueVerbs) %>%
unique()
#Finds characters by using bigrams, if word has said than it could be harry said or said harry
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 %in% dialogueVerbs$dialogueVerbs | word2 %in% dialogueVerbs$dialogueVerbs) %>%
gather() %>%
select(value) %>%
filter(!value %in% dialogueVerbs$dialogueVerbs) %>%
unique() %>%
head()
#Finds characters by using bigrams, if word has said than it could be harry said or said harry
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 %in% dialogueVerbs$dialogueVerbs | word2 %in% dialogueVerbs$dialogueVerbs) %>%
gather() %>%
select(value) %>%
filter(!value %in% dialogueVerbs$dialogueVerbs) %>%
unique() %>%
anti_join(stop_words, by = c("value" = "word"))
#Finds characters by using bigrams, if word has said than it could be harry said or said harry
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 %in% dialogueVerbs$dialogueVerbs | word2 %in% dialogueVerbs$dialogueVerbs) %>%
gather() %>%
select(value) %>%
filter(!value %in% dialogueVerbs$dialogueVerbs) %>%
unique() %>%
nrow()
#Finds characters by using bigrams, if word has said than it could be harry said or said harry
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 %in% dialogueVerbs$dialogueVerbs | word2 %in% dialogueVerbs$dialogueVerbs) %>%
gather() %>%
select(value) %>%
filter(!value %in% dialogueVerbs$dialogueVerbs) %>%
unique() %>%
anti_join(stop_words, by = c("value" = "word")) %>%
nrow()
#Finds characters by using bigrams, if word has said than it could be harry said or said harry
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 %in% dialogueVerbs$dialogueVerbs | word2 %in% dialogueVerbs$dialogueVerbs) %>%
gather() %>%
select(value) %>%
filter(!value %in% dialogueVerbs$dialogueVerbs) %>%
unique() %>%
anti_join(stop_words, by = c("value" = "word")) %>%
arrange(values)
#Finds characters by using bigrams, if word has said than it could be harry said or said harry
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 %in% dialogueVerbs$dialogueVerbs | word2 %in% dialogueVerbs$dialogueVerbs) %>%
gather() %>%
select(value) %>%
filter(!value %in% dialogueVerbs$dialogueVerbs) %>%
unique() %>%
anti_join(stop_words, by = c("value" = "word")) %>%
arrange(value)
lexicon::freq_first_names
#Finds characters by using bigrams, if word has said than it could be harry said or said harry
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 %in% dialogueVerbs$dialogueVerbs | word2 %in% dialogueVerbs$dialogueVerbs) %>%
gather() %>%
select(value) %>%
filter(!value %in% dialogueVerbs$dialogueVerbs) %>%
unique() %>%
anti_join(stop_words, by = c("value" = "word")) %>%
arrange(value) %>%
filter(values %in% lexicon::freq_first_names$Name)
#Finds characters by using bigrams, if word has said than it could be harry said or said harry
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 %in% dialogueVerbs$dialogueVerbs | word2 %in% dialogueVerbs$dialogueVerbs) %>%
gather() %>%
select(value) %>%
filter(!value %in% dialogueVerbs$dialogueVerbs) %>%
unique() %>%
anti_join(stop_words, by = c("value" = "word")) %>%
arrange(value) %>%
filter(value %in% lexicon::freq_first_names$Name)
#Finds characters by using bigrams, if word has said than it could be harry said or said harry
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 %in% dialogueVerbs$dialogueVerbs | word2 %in% dialogueVerbs$dialogueVerbs) %>%
gather() %>%
select(value) %>%
filter(!value %in% dialogueVerbs$dialogueVerbs) %>%
unique() %>%
anti_join(stop_words, by = c("value" = "word")) %>%
arrange(value) %>%
filter(value %in% lexicon::freq_first_names %>% select(name))
#Finds characters by using bigrams, if word has said than it could be harry said or said harry
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 %in% dialogueVerbs$dialogueVerbs | word2 %in% dialogueVerbs$dialogueVerbs) %>%
gather() %>%
select(value) %>%
filter(!value %in% dialogueVerbs$dialogueVerbs) %>%
unique() %>%
anti_join(stop_words, by = c("value" = "word")) %>%
arrange(value) %>%
filter(value %in% lexicon::freq_first_names$Name)
#Finds characters by using bigrams, if word has said than it could be harry said or said harry
lexicon::freq_first_names
#Finds characters by using bigrams, if word has said than it could be harry said or said harry
firstNameLexicon <- lexicon::freq_first_names
View(firstNameLexicon)
#Finds characters by using bigrams, if word has said than it could be harry said or said harry
firstNameLexicon <- lexicon::freq_first_names$Name
#Finds characters by using bigrams, if word has said than it could be harry said or said harry
firstNameLexicon <- lexicon::freq_first_names$Name %>% as.data.frame()
View(firstNameLexicon)
#Finds characters by using bigrams, if word has said than it could be harry said or said harry
firstNameLexicon <- lexicon::freq_first_names
firstNameLexicon <- firstNameLexicon %>% select(Name)
View(firstNameLexicon)
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 %in% dialogueVerbs$dialogueVerbs | word2 %in% dialogueVerbs$dialogueVerbs) %>%
gather() %>%
select(value) %>%
filter(!value %in% dialogueVerbs$dialogueVerbs) %>%
unique() %>%
anti_join(stop_words, by = c("value" = "word")) %>%
arrange(value) %>%
filter(value %in% firstNameLexicon)
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 %in% dialogueVerbs$dialogueVerbs | word2 %in% dialogueVerbs$dialogueVerbs) %>%
gather() %>%
select(value) %>%
filter(!value %in% dialogueVerbs$dialogueVerbs) %>%
unique() %>%
anti_join(stop_words, by = c("value" = "word")) %>%
arrange(value) %>%
filter(value %in% firstNameLexicon$Name)
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 %in% dialogueVerbs$dialogueVerbs | word2 %in% dialogueVerbs$dialogueVerbs) %>%
gather() %>%
select(value) %>%
unique() %>%
anti_join(stop_words, by = c("value" = "word")) %>%
arrange(value) %>%
filter(value %in% firstNameLexicon$Name)
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 %in% dialogueVerbs$dialogueVerbs | word2 %in% dialogueVerbs$dialogueVerbs) %>%
gather()
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 %in% dialogueVerbs$dialogueVerbs | word2 %in% dialogueVerbs$dialogueVerbs) %>%
gather() %>%
select(value)
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 %in% dialogueVerbs$dialogueVerbs | word2 %in% dialogueVerbs$dialogueVerbs) %>%
gather() %>%
select(value) %>%
filter(value == "ron")
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 %in% dialogueVerbs$dialogueVerbs | word2 %in% dialogueVerbs$dialogueVerbs) %>%
gather() %>%
select(value) %>%
unique() %>%
filter(value %in% dialogueVerbs$dialogueVerbs)
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 %in% dialogueVerbs$dialogueVerbs | word2 %in% dialogueVerbs$dialogueVerbs) %>%
gather() %>%
select(value) %>%
unique() %>%
filter(value %in% !dialogueVerbs$dialogueVerbs)
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 %in% dialogueVerbs$dialogueVerbs | word2 %in% dialogueVerbs$dialogueVerbs) %>%
gather() %>%
select(value) %>%
unique() %>%
filter(value !%in% dialogueVerbs$dialogueVerbs)
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 %in% dialogueVerbs$dialogueVerbs | word2 %in% dialogueVerbs$dialogueVerbs) %>%
gather() %>%
select(value) %>%
unique() %>%
filter(!value %in% dialogueVerbs$dialogueVerbs)
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 %in% dialogueVerbs$dialogueVerbs | word2 %in% dialogueVerbs$dialogueVerbs) %>%
gather() %>%
select(value) %>%
unique() %>%
filter(!value %in% dialogueVerbs$dialogueVerbs) %>%
anti_join(stop_words, by = c("values" = "word"))
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 %in% dialogueVerbs$dialogueVerbs | word2 %in% dialogueVerbs$dialogueVerbs) %>%
gather() %>%
select(value) %>%
unique() %>%
filter(!value %in% dialogueVerbs$dialogueVerbs) %>%
anti_join(stop_words, by = c("value" = "word"))
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 %in% dialogueVerbs$dialogueVerbs | word2 %in% dialogueVerbs$dialogueVerbs) %>%
gather() %>%
select(value) %>%
unique() %>%
filter(!value %in% dialogueVerbs$dialogueVerbs) %>%
anti_join(stop_words, by = c("value" = "word")) %>%
arrange(value)
firstNameLexicon
firstNameLexicon %>% tolower()
firstNameLexicon <-  firstNameLexicon %>% tolower()
firstNameLexicon <- lexicon::freq_first_names
firstNameLexicon <- firstNameLexicon %>% select(Name)
sapply(firstNameLexicon, tolower)
View(firstNameLexicon)
firstNameLexicon <-  sapply(firstNameLexicon, tolower)
View(firstNameLexicon)
firstNameLexicon <-  sapply(firstNameLexicon, tolower) %>% as.data.frame()
View(firstNameLexicon)
colnames(firstNameLexicon) <- "names"
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 %in% dialogueVerbs$dialogueVerbs | word2 %in% dialogueVerbs$dialogueVerbs) %>%
gather() %>%
select(value) %>%
unique() %>%
filter(!value %in% dialogueVerbs$dialogueVerbs) %>%
anti_join(stop_words, by = c("value" = "word")) %>%
arrange(value)
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 %in% dialogueVerbs$dialogueVerbs | word2 %in% dialogueVerbs$dialogueVerbs) %>%
gather() %>%
select(value) %>%
unique() %>%
filter(!value %in% dialogueVerbs$dialogueVerbs) %>%
anti_join(stop_words, by = c("value" = "word")) %>%
arrange(value) %>%
filter(value %in% firstNameLexicon)
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 %in% dialogueVerbs$dialogueVerbs | word2 %in% dialogueVerbs$dialogueVerbs) %>%
gather() %>%
select(value) %>%
unique() %>%
filter(!value %in% dialogueVerbs$dialogueVerbs) %>%
anti_join(stop_words, by = c("value" = "word")) %>%
arrange(value) %>%
filter(value %in% firstNameLexicon$names)
