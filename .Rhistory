install.packages("beepr")
library(caret)
library(tidyverse)
library(doParallel)
#Read in data
harrypotter <- readRDS("harrypotter.rds")
setwd("E:/School/R Work/SortingHat")
library(caret)
library(tidyverse)
library(doParallel)
#Read in data
harrypotter <- readRDS("harrypotter.rds")
harrypotter$TargetHouse <- as.factor(harrypotter$TargetHouse)
#Remove character feature
harrypotter$character <- NULL
#Creates an upsampled dataset to deal with class imbalances
hpUp <- upSample(harrypotter[,2:1591],harrypotter$TargetHouse)
cl <- makePSOCKcluster(7)
registerDoParallel(cl)
RandomForestModel <- train(Class~.,
data = hpUp,
method = "rf",
preProc = c("YeoJohnson"))
stopCluster(cl)
df <- readRDS("harrypotter.rds")
df <- df %>% select(-character)
df$TargetHouse <- as.factor(df$TargetHouse)
testAccuracy <- function (model) {
model %>%
predict(df) %>%
cbind(df$TargetHouse) %>%
as.data.frame() %>%
rename(., "Predicted" = ., "Actual" = V2) %>%
mutate(Correct = if_else(Actual == Predicted, "Correct", "Wrong")) %>%
filter(Correct == "Correct") %>%
nrow() / nrow(df)
}
RandomForestModel
RandomForestModel %>% confusionMatrix()
testAccuracy(RandomForestModel)
saveRDS(RandomForestModel, "RandomForestModel.rds")
