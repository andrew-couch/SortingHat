df <- separate(df, col = V1, into = c("left","right"), sep = "\\:", fill = "left")
df[df == ""] <- NA
#Stores lines where dialogue is on the same line as character
DialgoueSameLine <- df[complete.cases(df),]
RestOfDialogue <- df[!complete.cases(df),]
RestOfDialogue$left <-  na.locf(RestOfDialogue$left)
RestOfDialogue <-  RestOfDialogue %>% na.omit()
cleanedDf <- rbind(RestOfDialogue, DialgoueSameLine)
write.csv(cleanedDf, "HarryPotterAddition.csv", row.names = FALSE)
df <- read.csv("CleaningProcess.csv", header = FALSE)
library(tidyverse)
library(zoo)
df <- read.csv("CleaningProcess.csv", header = FALSE)
df <- separate(df, col = V1, into = c("left","right"), sep = "\\:", fill = "left")
df[df == ""] <- NA
#Stores lines where dialogue is on the same line as character
DialgoueSameLine <- df[complete.cases(df),]
RestOfDialogue <- df[!complete.cases(df),]
View(RestOfDialogue)
RestOfDialogue$left <-  na.locf(RestOfDialogue$left)
View(RestOfDialogue)
library(text2vec)
library(tidyverse)
library(tidytext)
harrypotter <- read.csv("HarryPotter.csv")
harrypotter$Dialogue <- harrypotter$Dialogue %>% as.character()
harrypotter %>%
select(Dialogue) %>%
unnest_tokens(word, "Dialogue") %>%
anti_join(stop_words) %>%
filter(!str_detect(word, pattern = "[[:digit:]]"),
!str_detect(word, pattern = "[[:punct:]]"),
!str_detect(word, pattern = "(.)\\1{2,}"),
!str_detect(word, pattern = "\\b(.)\\b")) %>%
count(word, sort = TRUE) %>%
filter(n > 1) %>%
ggplot(mapping = aes(n)) + geom_histogram() + scale_x_log10()
wordList <- harrypotter %>%
select(Dialogue) %>%
unnest_tokens(word, "Dialogue") %>%
anti_join(stop_words) %>%
filter(!str_detect(word, pattern = "[[:digit:]]"),
!str_detect(word, pattern = "[[:punct:]]"),
!str_detect(word, pattern = "(.)\\1{2,}"),
!str_detect(word, pattern = "\\b(.)\\b")) %>%
count(word, sort = TRUE) %>%
filter(n > 1) %>%
pull(word)
bagofwordsFeatures <- harrypotter %>%
unnest_tokens(word, `Dialogue`) %>%
anti_join(stop_words) %>%
filter(word %in% wordList) %>%
count(Character, word) %>%
spread(word, n) %>%
map_df(replace_na, 0)
bigramList <- harrypotter %>%
unnest_tokens(bigram, `Dialogue`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(!word1 %in% stop_words$word,
!word2 %in% stop_words$word,
!str_detect(word1, pattern = "[[:digit:]]"),
!str_detect(word2, pattern = "[[:digit:]]"),
!str_detect(word1, pattern = "[[:punct:]]"),
!str_detect(word2, pattern = "[[:punct:]]"),
!str_detect(word1, pattern = "(.)\\1{2,}"),
!str_detect(word2, pattern = "(.)\\1{2,}"),
!str_detect(word1, pattern = "\\b(.)\\b"),
!str_detect(word1, pattern = "\\b(.)\\b")) %>%
unite("bigram", c(word1, word2), sep = " ") %>%
count(bigram) %>%
filter(n >1) %>%
pull(bigram)
bigramFeatures <- harrypotter %>%
unnest_tokens(bigram, `Dialogue`, token = "ngrams", n = 2) %>%
filter(bigram %in% bigramList) %>%
count(Character, bigram) %>%
spread(bigram, n) %>%
map_df(replace_na, 0)
bigramFeatures <- harrypotter %>%
unnest_tokens(bigram, `Dialogue`, token = "ngrams", n = 2) %>%
filter(bigram %in% bigramList) %>%
count(Character, bigram) %>%
spread(bigram, n) %>%
map_df(replace_na, 0)
harrypotter <- read.csv("HarryPotter.csv")
harrypotter$Dialogue <- harrypotter$Dialogue %>% as.character()
View(harrypotter)
harrypotter %>%
select(Dialogue) %>%
unnest_tokens(word, "Dialogue") %>%
anti_join(stop_words) %>%
filter(!str_detect(word, pattern = "[[:digit:]]"),
!str_detect(word, pattern = "[[:punct:]]"),
!str_detect(word, pattern = "(.)\\1{2,}"),
!str_detect(word, pattern = "\\b(.)\\b")) %>%
count(word, sort = TRUE) %>%
filter(n > 1) %>%
ggplot(mapping = aes(n)) + geom_histogram() + scale_x_log10()
library(text2vec)
library(tidyverse)
library(tidytext)
harrypotter <- read.csv("HarryPotter.csv")
harrypotter$Dialogue <- harrypotter$Dialogue %>% as.character()
harrypotter %>%
select(Dialogue) %>%
unnest_tokens(word, "Dialogue") %>%
anti_join(stop_words) %>%
filter(!str_detect(word, pattern = "[[:digit:]]"),
!str_detect(word, pattern = "[[:punct:]]"),
!str_detect(word, pattern = "(.)\\1{2,}"),
!str_detect(word, pattern = "\\b(.)\\b")) %>%
count(word, sort = TRUE) %>%
filter(n > 1) %>%
ggplot(mapping = aes(n)) + geom_histogram() + scale_x_log10()
wordList <- harrypotter %>%
select(Dialogue) %>%
unnest_tokens(word, "Dialogue") %>%
anti_join(stop_words) %>%
filter(!str_detect(word, pattern = "[[:digit:]]"),
!str_detect(word, pattern = "[[:punct:]]"),
!str_detect(word, pattern = "(.)\\1{2,}"),
!str_detect(word, pattern = "\\b(.)\\b")) %>%
count(word, sort = TRUE) %>%
filter(n > 1) %>%
pull(word)
bagofwordsFeatures <- harrypotter %>%
unnest_tokens(word, `Dialogue`) %>%
anti_join(stop_words) %>%
filter(word %in% wordList) %>%
count(Obs, word) %>%
spread(word, n) %>%
map_df(replace_na, 0)
bigramList <- harrypotter %>%
unnest_tokens(bigram, `Dialogue`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(!word1 %in% stop_words$word,
!word2 %in% stop_words$word,
!str_detect(word1, pattern = "[[:digit:]]"),
!str_detect(word2, pattern = "[[:digit:]]"),
!str_detect(word1, pattern = "[[:punct:]]"),
!str_detect(word2, pattern = "[[:punct:]]"),
!str_detect(word1, pattern = "(.)\\1{2,}"),
!str_detect(word2, pattern = "(.)\\1{2,}"),
!str_detect(word1, pattern = "\\b(.)\\b"),
!str_detect(word1, pattern = "\\b(.)\\b")) %>%
unite("bigram", c(word1, word2), sep = " ") %>%
count(bigram) %>%
filter(n >1) %>%
pull(bigram)
bigramFeatures <- harrypotter %>%
unnest_tokens(bigram, `Dialogue`, token = "ngrams", n = 2) %>%
filter(bigram %in% bigramList) %>%
count(Obs, bigram) %>%
spread(bigram, n) %>%
map_df(replace_na, 0)
View(bagofwordsFeatures)
bigramFeatures[1:5,1:4]
harrypotter %>%
unnest_tokens( `Dialogue`, token = "ngrams", n = 3) %>%
separate(bigram, c("word1", "word2", "word3"), sep = " ")
harrypotter %>%
unnest_tokens( `Dialogue`, token = "ngrams", n = 3)
harrypotter %>%
unnest_tokens(trigram, `Dialogue`, token = "ngrams", n = 3)
harrypotter %>%
unnest_tokens(trigram, `Dialogue`, token = "ngrams", n = 3) %>%
separate(trigram, c("word1","word2","word3"), sep = " ") %>%
filter(!word1 %in% stop_words$word,
!str_detect(word1, pattern = "[[:digit:]]"),
!str_detect(word1, pattern = "[[:punct:]]"),
!str_detect(word1, pattern = "(.)\\1{2,}"),
!str_detect(word1, pattern = "\\b(.)\\b"),
!word2 %in% stop_words$word,
!str_detect(word2, pattern = "[[:digit:]]"),
!str_detect(word2, pattern = "[[:punct:]]"),
!str_detect(word2, pattern = "(.)\\1{2,}"),
!str_detect(word2, pattern = "\\b(.)\\b"),
!word3 %in% stop_words$word,
!str_detect(word3, pattern = "[[:digit:]]"),
!str_detect(word3, pattern = "[[:punct:]]"),
!str_detect(word3, pattern = "(.)\\1{2,}"),
!str_detect(word3, pattern = "\\b(.)\\b")) %>%
unite("trigram", c(word1, word2, word3), sep = " ") %>%
count(trigram) %>%
filter(n > 1) %>%
pull(trigram)
trigramList <- harrypotter %>%
unnest_tokens(trigram, `Dialogue`, token = "ngrams", n = 3) %>%
separate(trigram, c("word1","word2","word3"), sep = " ") %>%
filter(!word1 %in% stop_words$word,
!str_detect(word1, pattern = "[[:digit:]]"),
!str_detect(word1, pattern = "[[:punct:]]"),
!str_detect(word1, pattern = "(.)\\1{2,}"),
!str_detect(word1, pattern = "\\b(.)\\b"),
!word2 %in% stop_words$word,
!str_detect(word2, pattern = "[[:digit:]]"),
!str_detect(word2, pattern = "[[:punct:]]"),
!str_detect(word2, pattern = "(.)\\1{2,}"),
!str_detect(word2, pattern = "\\b(.)\\b"),
!word3 %in% stop_words$word,
!str_detect(word3, pattern = "[[:digit:]]"),
!str_detect(word3, pattern = "[[:punct:]]"),
!str_detect(word3, pattern = "(.)\\1{2,}"),
!str_detect(word3, pattern = "\\b(.)\\b")) %>%
unite("trigram", c(word1, word2, word3), sep = " ") %>%
count(trigram) %>%
filter(n > 1) %>%
pull(trigram)
harrypotter %>%
unnest(trigram, `Dialogue`, token = "ngrams", n = 3) %>%
filter(trigram %in% trigramList) %>%
count(Obs, trigram) %>%
spread(trigram, n) %>%
map_df(replace_na,0)
harrypotter %>%
unnest_tokens(trigram, `Dialogue`, token = "ngrams", n = 3) %>%
filter(trigram %in% trigramList) %>%
count(Obs, trigram) %>%
spread(trigram, n) %>%
map_df(replace_na,0)
trigramFeatures <- harrypotter %>%
unnest_tokens(trigram, `Dialogue`, token = "ngrams", n = 3) %>%
filter(trigram %in% trigramList) %>%
count(Obs, trigram) %>%
spread(trigram, n) %>%
map_df(replace_na,0)
library(sentimentr)
harrypotter$Dialogue %>% sentiment()
harrypotter$Dialogue %>% head() %>% sentiment()
library(tidyverse)
library(tidytext)
library(sentimentr)
harrypotter <- read.csv("HarryPotter.csv")
harrypotter$Dialogue <- harrypotter$Dialogue %>% as.character()
harrypotter <- harrypotter %>% get_sentences()
harrypotter$Obs <- seq.int(nrow(harrypotter))
harrypotter %>%
select(Dialogue) %>%
unnest_tokens(word, "Dialogue") %>%
anti_join(stop_words) %>%
filter(!str_detect(word, pattern = "[[:digit:]]"),
!str_detect(word, pattern = "[[:punct:]]"),
!str_detect(word, pattern = "(.)\\1{2,}"),
!str_detect(word, pattern = "\\b(.)\\b")) %>%
count(word, sort = TRUE) %>%
filter(n > 1) %>%
ggplot(mapping = aes(n)) + geom_histogram() + scale_x_log10()
wordList <- harrypotter %>%
select(Dialogue) %>%
unnest_tokens(word, "Dialogue") %>%
anti_join(stop_words) %>%
filter(!str_detect(word, pattern = "[[:digit:]]"),
!str_detect(word, pattern = "[[:punct:]]"),
!str_detect(word, pattern = "(.)\\1{2,}"),
!str_detect(word, pattern = "\\b(.)\\b")) %>%
count(word, sort = TRUE) %>%
filter(n > 1) %>%
pull(word)
bagofwordsFeatures <- harrypotter %>%
unnest_tokens(word, `Dialogue`) %>%
anti_join(stop_words) %>%
filter(word %in% wordList) %>%
count(Obs, word) %>%
spread(word, n) %>%
map_df(replace_na, 0)
bigramList <- harrypotter %>%
unnest_tokens(bigram, `Dialogue`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(!word1 %in% stop_words$word,
!word2 %in% stop_words$word,
!str_detect(word1, pattern = "[[:digit:]]"),
!str_detect(word2, pattern = "[[:digit:]]"),
!str_detect(word1, pattern = "[[:punct:]]"),
!str_detect(word2, pattern = "[[:punct:]]"),
!str_detect(word1, pattern = "(.)\\1{2,}"),
!str_detect(word2, pattern = "(.)\\1{2,}"),
!str_detect(word1, pattern = "\\b(.)\\b"),
!str_detect(word1, pattern = "\\b(.)\\b")) %>%
unite("bigram", c(word1, word2), sep = " ") %>%
count(bigram) %>%
filter(n >1) %>%
pull(bigram)
bigramFeatures <- harrypotter %>%
unnest_tokens(bigram, `Dialogue`, token = "ngrams", n = 2) %>%
filter(bigram %in% bigramList) %>%
count(Obs, bigram) %>%
spread(bigram, n) %>%
map_df(replace_na, 0)
trigramList <- harrypotter %>%
unnest_tokens(trigram, `Dialogue`, token = "ngrams", n = 3) %>%
separate(trigram, c("word1","word2","word3"), sep = " ") %>%
filter(!word1 %in% stop_words$word,
!str_detect(word1, pattern = "[[:digit:]]"),
!str_detect(word1, pattern = "[[:punct:]]"),
!str_detect(word1, pattern = "(.)\\1{2,}"),
!str_detect(word1, pattern = "\\b(.)\\b"),
!word2 %in% stop_words$word,
!str_detect(word2, pattern = "[[:digit:]]"),
!str_detect(word2, pattern = "[[:punct:]]"),
!str_detect(word2, pattern = "(.)\\1{2,}"),
!str_detect(word2, pattern = "\\b(.)\\b"),
!word3 %in% stop_words$word,
!str_detect(word3, pattern = "[[:digit:]]"),
!str_detect(word3, pattern = "[[:punct:]]"),
!str_detect(word3, pattern = "(.)\\1{2,}"),
!str_detect(word3, pattern = "\\b(.)\\b")) %>%
unite("trigram", c(word1, word2, word3), sep = " ") %>%
count(trigram) %>%
filter(n > 1) %>%
pull(trigram)
trigramFeatures <- harrypotter %>%
unnest_tokens(trigram, `Dialogue`, token = "ngrams", n = 3) %>%
filter(trigram %in% trigramList) %>%
count(Obs, trigram) %>%
spread(trigram, n) %>%
map_df(replace_na,0)
harrypotter %>%
head() %>%
get_sentences() %>%
sentiment(polarity_dt = lexicon::hash_sentiment_jockers) %>%
view()
lexicon::hash_nrc_emotions
lexicon::hash_sentiment_huliu
lexicon::hash_sentiment_jockers_rinker
#Finanical Lexicon
lexicon::hash_sentiment_loughran_mcdonald
lexicon::hash_sentiment_nrc
#https://cran.r-project.org/web/packages/lexicon/lexicon.pdf
harrypotter %>%
unnest_tokens(bigram, `Dialogue`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ")
harrypotter %>%
unnest_tokens(bigram, `Dialogue`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(word1 %in% c("harry", "hermoine","ron"))
harrypotter %>%
unnest_tokens(bigram, `Dialogue`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(word1 %in% c("harry", "hermoine","ron")) %>%
select(word2) %>% unique()
harrypotter %>%
unnest_tokens(bigram, `Dialogue`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(word1 %in% c("harry", "hermoine","ron")) %>%
select(word2) %>% unique() %>% arrange()
View(harrypotter)
harrypotter$Character %>% unique()
library(tidyverse)
library(tidytext)
library(harrypotter)
df <- philosophers_stone %>% as.data.frame()
colnames(df) <- "text"
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 == "said" | word2 == "said") %>%
gather() %>%
select(value) %>%
unique() %>%
arrange(value)
saidWordList <- df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 == "said" | word2 == "said") %>%
gather() %>%
select(value) %>%
unique() %>%
arrange(value)
saidWordList
df <- chamber_of_secrets %>% as.data.frame()
View(df)
colnames(df) <- "text"
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 == "said" | word2 == "said") %>%
gather() %>%
select(value) %>%
unique() %>%
arrange(value)
philosophers_stone <- philosophers_stone %>% as.data.frame()
chamber_of_secrets <- chamber_of_secrets %>% as.data.frame()
prisoner_of_azkaban <- prisoner_of_azkaban %>% as.data.frame()
goblet_of_fire <- goblet_of_fire %>% as.data.frame()
order_of_the_phoenix <- order_of_the_phoenix %>% as.data.frame()
half_blood_prince <- half_blood_prince %>% as.data.frame()
deathly_hallows <- deathly_hallows %>% as.data.frame()
philosophers_stone <- philosophers_stone %>% as.data.frame()
chamber_of_secrets <- chamber_of_secrets %>% as.data.frame()
prisoner_of_azkaban <- prisoner_of_azkaban %>% as.data.frame()
goblet_of_fire <- goblet_of_fire %>% as.data.frame()
order_of_the_phoenix <- order_of_the_phoenix %>% as.data.frame()
half_blood_prince <- half_blood_prince %>% as.data.frame()
deathly_hallows <- deathly_hallows %>% as.data.frame()
rbind(philosophers_stone, chamber_of_secrets)
View(chamber_of_secrets)
philosophers_stone$book <- "philosophers_stone"
chamber_of_secrets$book <- "chamber_of_secrets"
prisoner_of_azkaban$book <- "prisoner_of_azkaban"
goblet_of_fire$book <- "goblet_of_fire"
order_of_the_phoenix$book <- "order_of_the_phoenix"
half_blood_prince$book <- "half_blood_prince"
deathly_hallows$book <- "deathly_hallows"
df <- rbind(philosophers_stone, chamber_of_secrets, prisoner_of_azkaban, goblet_of_fire, order_of_the_phoenix, half_blood_prince, deathly_hallows)
View(chamber_of_secrets)
colnames(df) <- c("text", "book")
saidWordList <- df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 == "said" | word2 == "said") %>%
gather() %>%
select(value) %>%
unique() %>%
arrange(value)
saidWordList %>% anti_join(stop_words)
View(saidWordList)
saidWordList %>% anti_join(stop_words, value)
filter(saidWordList %in% stop_words)
stop_words %>% head()
saidWordList %>% anti_join(stop_words, word)
saidWordList %>% anti_join(stop_words, by = c("word","value"))
?anti_join
saidWordList %>% anti_join(stop_words, by = c("value" = "word"))
saidWordList <- df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 == "said" | word2 == "said") %>%
gather() %>%
select(value) %>%
unique() %>%
arrange(value) %>%
anti_join(stop_words, by = c("value" = "word"))
View(saidWordList)
View(saidWordList)
saidWordList <- df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 == "said" | word2 == "said") %>%
gather() %>%
select(value) %>%
unique() %>%
arrange(value)
saidWordList <-  saidWordList %>% anti_join(stop_words, by = c("value" = "word"))
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 == "harry" | word2 == "harry") %>%
gather() %>%
select(value) %>%
unique() %>%
arrange(value) %>%
anti_join(stop_words, by = c("value" = "word"))
library(tidyverse)
library(tidytext)
library(harrypotter)
philosophers_stone <- philosophers_stone %>% as.data.frame()
chamber_of_secrets <- chamber_of_secrets %>% as.data.frame()
prisoner_of_azkaban <- prisoner_of_azkaban %>% as.data.frame()
goblet_of_fire <- goblet_of_fire %>% as.data.frame()
order_of_the_phoenix <- order_of_the_phoenix %>% as.data.frame()
half_blood_prince <- half_blood_prince %>% as.data.frame()
deathly_hallows <- deathly_hallows %>% as.data.frame()
philosophers_stone$book <- "philosophers_stone"
chamber_of_secrets$book <- "chamber_of_secrets"
prisoner_of_azkaban$book <- "prisoner_of_azkaban"
goblet_of_fire$book <- "goblet_of_fire"
order_of_the_phoenix$book <- "order_of_the_phoenix"
half_blood_prince$book <- "half_blood_prince"
deathly_hallows$book <- "deathly_hallows"
df <- rbind(philosophers_stone, chamber_of_secrets, prisoner_of_azkaban, goblet_of_fire, order_of_the_phoenix, half_blood_prince, deathly_hallows)
colnames(df) <- c("text", "book")
saidWordList <- df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 == "said" | word2 == "said") %>%
gather() %>%
select(value) %>%
unique() %>%
arrange(value) %>%
anti_join(stop_words, by = c("value" = "word"))
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 == "harry" | word2 == "harry") %>%
gather() %>%
select(value) %>%
unique() %>%
arrange(value) %>%
anti_join(stop_words, by = c("value" = "word"))
substr("said", start = nchar("said", end = nchar("said")))
substr("said", start = nchar("said"))
substr("said", start = nchar("said"), stop = nchar("said"))
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 == "harry" | word2 == "harry") %>%
gather() %>%
select(value) %>%
unique() %>%
arrange(value) %>%
anti_join(stop_words, by = c("value" = "word")) %>%
filter(substr(value, start = nchar(value), stop = nchar(value)) == "d")
