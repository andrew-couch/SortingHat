library(taskscheduleR)
taskscheduler_ls()
taskscheduler_ls() %>% view()
View(taskscheduler_ls())
taskscheduleR:::taskschedulerAddin()
taskscheduleR:::taskschedulerAddin()
?taskscheduleR
help(taskscheduleR)
library(rattle)
rattle()
rattle()
library(rattle)
rattle()
devtools::install_github("bradleyboehmke/harrypotter")
install.packages("devtools")
devtools::install_github("bradleyboehmke/harrypotter")
harrypotter::chamber_of_secrets
library(harrypotter)
chamber_of_secrets
data(chamber_of_secrets)
chamber_of_secrets
?harrypotter
chamber_of_secrets[2]
library(tidyverse)
library(tidytext)
chamber_of_secrets <- as.data.frame(chamber_of_secrets)
View(chamber_of_secrets)
View(chamber_of_secrets)
View(chamber_of_secrets)
chamber_of_secrets %>%
unnest_tokens(bigram, `chamber_of_secrets`, token = "ngrams", n = 2)
chamber_of_secrets %>%
unnest_tokens(bigram, `chamber_of_secrets`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ")
chamber_of_secrets %>%
unnest_tokens(bigram, `chamber_of_secrets`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(word1 %in% c("Harry", "Hermoine","Ron"))
filter(word1 %in% c("ron","harry")
chamber_of_secrets %>%
unnest_tokens(bigram, `chamber_of_secrets`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(word1 %in% c("ron","harry"))
chamber_of_secrets %>%
unnest_tokens(bigram, `chamber_of_secrets`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(word1 %in% c("ron","harry"))
chamber_of_secrets %>%
unnest_tokens(bigram, `chamber_of_secrets`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(word1 %in% c("ron","harry")) %>% select(word2) %>% unique() %>% arrange()
chamber_of_secrets %>%
unnest_tokens(bigram, `chamber_of_secrets`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(word1 %in% c("ron","harry")) %>% select(word2) %>% unique() %>% arrange(word2)
chamber_of_secrets %>%
unnest_tokens(bigram, `chamber_of_secrets`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(word2 == "said")
chamber_of_secrets %>%
unnest_tokens(bigram, `chamber_of_secrets`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(word2 == "said" && word1 %in% c("harry","hermoine","ron", "malfoy"))
chamber_of_secrets %>%
unnest_tokens(bigram, `chamber_of_secrets`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(word2 == "said" & word1 %in% c("harry","hermoine","ron", "malfoy"))
harrypotter <- harrypotter::chamber_of_secrets
?`harrypotter-package`
?harrypotter
harrypotter::deathly_hallows
harrypotter::goblet_of_fire
harrypotter::half_blood_prince
harrypotter::order_of_the_phoenix
harrypotter::philosophers_stone
harrypotter::prisoner_of_azkaban
titles <- c("deathly_hallows", "goblet_of_fire","half_blood_prince","order_of_the_phoenix", "philosophers_stone","prisoner_of_azkaban","chamber_of_secrets")
library(harrypotter)
library(tidyverse)
library(tidytext)
title <- c("chamber_of_secrets", "deathly_hallows","goblet_of_fire","half_blood_prince","order_of_the_phoenix","philosophers_stone","prisoner_of_azkaban")
title[2]
harrypotter <- NULL
harrypotter <- as.data.frame(harrypotter)
harrypotter %>% rbind(chamber_of_secrets)
for i in 1:length(title) {
harrypotter <- harrypotter %>% rbind(title[i])
}
for i in 1:length(title) {
harrypotter <- harrypotter %>% rbind(harrypotter::title[i])
}
harrypotter %>% rbind(title[1])
title[1]
harrpotter::title[1]
haryrpotter::title[1]
harrypotter::title[1]
harrypotter::paste(title[1])
harrypotter <- harrypotter::chamber_of_secrets
<- harrypotter::chamber_of_secrets
harrypotter <- harrypotter %>% rbind(harrypotter::deathly_hallows)
harrypotter <- harrypotter %>% rbind(harrypotter::goblet_of_fire)
harrypotter <- harrypotter %>% rbind(::half_blood_prince)
harrypotter <- harrypotter %>% rbind(harrypotter::order_of_the_phoenix)
harrypotter <- harrypotter %>% rbind(harrypotter::philosophers_stone)
harrypotter <- harrypotter %>% rbind(harrypotter::prisoner_of_azkaban)
harrypotter <- harrypotter::chamber_of_secrets
harrypotter <- harrypotter %>% rbind(harrypotter::deathly_hallows)
harrypotter <- harrypotter %>% rbind(harrypotter::goblet_of_fire)
harrypotter <- harrypotter %>% rbind(::half_blood_prince)
harrypotter <- harrypotter %>% rbind(harrypotter::order_of_the_phoenix)
harrypotter <- harrypotter %>% rbind(harrypotter::philosophers_stone)
harrypotter <- harrypotter %>% rbind(harrypotter::prisoner_of_azkaban)
harrypotter <- as.data.frame(harrypotter)
View(harrypotter)
harrypotter <- harrypotter::chamber_of_secrets
harrypotter <- as.data.frame(harrypotter)
View(harrypotter)
harrypotter <- harrypotter %>% rbind(harrypotter::deathly_hallows)
harrypotter <- harrypotter %>% rbind(harrypotter::deathly_hallows)
View(harrypotter)
harrypotter::chamber_of_secrets
titles <- c("Philosopher's Stone", "Chamber of Secrets", "Prisoner of Azkaban",
"Goblet of Fire", "Order of the Phoenix", "Half-Blood Prince",
"Deathly Hallows")
books <- list(philosophers_stone, chamber_of_secrets, prisoner_of_azkaban,
goblet_of_fire, order_of_the_phoenix, half_blood_prince,
deathly_hallows)
books
library(tidyverse)
library(tidytext)
library(harrypotter)
df <- philosophers_stone
df <- as.data.frame(df)
df$book <- "philosophers_stone"
View(df)
df$chapter <- seq.int(nrow(df))
View(df)
df %>%
unnest_tokens(bigram, `df`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ")
df %>%
unnest_tokens(bigram, `df`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(word1 == "said" | word2 == "said")
df %>%
unnest_tokens(bigram, `df`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(word1 == "said" | word2 == "said") %>% unique()
df %>%
unnest_tokens(bigram, `df`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(word1 == "said" | word2 == "said") %>% unique()
df %>%
unnest_tokens(bigram, `df`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(word1 == "said" | word2 == "said") %>% unique() %>% arrange(word1)
df %>%
unnest_tokens(bigram, `df`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(word1 == "said" | word2 == "said") %>% arrange(word1) %>% unique(word1, word2)
filter(word1 == "said" | word2 == "said") %>% arrange(word1) %>% unique(word1_
df %>%
unnest_tokens(bigram, `df`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(word1 == "said" | word2 == "said") %>% arrange(word1) %>% unique(word1)
df %>%
unnest_tokens(bigram, `df`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(word1 == "said" | word2 == "said") %>% arrange(word1)
df %>%
unnest_tokens(bigram, `df`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(word1 == "said" | word2 == "said") %>%
select(word1, word2) %>%
arrange() %>%
unique()
df %>%
unnest_tokens(bigram, `df`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(word1 == "said" | word2 == "said") %>%
select(word1, word2) %>%
arrange(word1) %>%
unique()
df %>%
unnest_tokens(bigram, `df`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(word1 == "said") %>%
select(word1, word2) %>%
unique() %>%
arrange(word1)
df %>%
unnest_tokens(bigram, `df`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(word1 == "said") %>%
select(word1, word2) %>%
unique() %>%
arrange(word2)
df %>%
unnest_tokens(bigram, `df`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(word1 == "said") %>%
select(word1, word2) %>%
unique() %>%
arrange(word2)
df %>%
unnest_tokens(bigram, `df`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(word1 == "said") %>%
select(word2) %>%
unique() %>%
arrange()
df %>%
unnest_tokens(bigram, `df`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(word1 == "said") %>%
select(word2) %>%
unique() %>%
arrange(word2)
df %>%
unnest_tokens(bigram, `df`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ")
df %>%
unnest_tokens(bigram, `df`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>% select(word1, word2)
bigram <- df %>%
unnest_tokens(bigram, `df`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2)
bigram %>%
filter(word1 == "said")
bigram %>%
filter(word1 == "said") %>%
select(word2) %>%
unique() %>%
arrange()
bigram %>%
filter(word1 == "said") %>%
select(word2) %>%
unique() %>%
arrange(word2)
bigram %>%
filter(word1 == "said") %>%
select(word2) %>%
unique() %>%
rbind(bigram %>%
filter(word2 == "said") %>%
select(word1)) %>% arrange()
bigram %>%
filter(word1 == "said") %>%
select(word2) %>%
unique() %>%
rbind(bigram %>%
filter(word2 == "said") %>%
select(word1))
select(word1)
bigram %>%
filter(word1 == "said") %>%
select(word2) %>%
unique() %>%
rbind(bigram %>%
filter(word2 == "said") %>%
select(word1))
bigram %>%
filter(word1 == "said") %>%
select(word2) %>%
unique() %>%
rbind(bigram %>%
filter(word2 == "said") %>% select(word1))
bigram %>%
filter(word1 == "said") %>%
select(word2) %>%
unique() %>%
rbind(bigram %>%
filter(word2 == "said") %>% select(word1))
bigram %>%
filter(word1 == "said") %>%
select(word2) %>%
unique() %>%
rbind(bigram %>%
filter(word2 == "said") %>% select(word1) %>% unique())
rbind(bigram %>%
filter(word2 == "said") %>% select(word1) %>% unique())
rbind(bigram %>% filter(word2 == "said") %>% select(word1) %>% unique(),
bigram %>% filter(word1 == "said") %>% select(word2) %>% unique())
rbind(bigram %>% filter(word2 == "said") %>% select(word1) %>% unique(),
bigram %>% filter(word1 == "said") %>% select(word2) %>% unique())
rbind(bigram %>% filter(word2 == "said") %>% select(word1)
rbind(bigram %>% filter(word2 == "said") %>% select(word1),
bigram %>% filter(word1 == "said") %>% select(word2))
rbind(bigram %>% filter(word2 == "said") %>% select(word1),
bigram %>% filter(word1 == "said") %>% select(word2))
rbind(bigram %>% filter(word2 == "said") %>% select(word1),
bigram %>% filter(word1 == "said") %>% select(word2))
rbind(bigram %>% filter(word2 == "said") %>% select(word1),
bigram %>% filter(word1 == "said") %>% select(word2))
bigram %>% filter(word1 == "said" | word2 == "said")
bigram %>%
filter(word1 == "said" | word2 == "said") %>% rbind(word1, word2)
bigram %>%
filter(word1 == "said" | word2 == "said") %>% unique(word1, word2)
bigram %>%
filter(word1 == "said" | word2 == "said") %>% unique(word1, word2)
bigram %>%
filter(word1 == "said" | word2 == "said") %>% unique()
bigram %>%
filter(word1 == "said" | word2 == "said") %>% unique() %>% gather()
bigram %>%
filter(word1 == "said" | word2 == "said") %>%
unique() %>%
gather() %>%
select(value)
bigram %>%
filter(word1 == "said" | word2 == "said") %>%
unique() %>%
gather() %>%
select(value) %>%
unique()
bigram %>%
filter(word1 == "said" | word2 == "said") %>%
gather() %>%
select(value) %>%
unique()
bigram %>%
filter(word1 == "said" | word2 == "said")
bigram %>%
filter(word1 == "said" | word2 == "said") %>%
gather()
bigram %>%
filter(word1 == "said" | word2 == "said") %>%
gather() %>%
select(value) %>%
unique() %>%
arrange()
bigram %>%
filter(word1 == "said" | word2 == "said") %>%
gather() %>%
select(value) %>%
unique() %>%
arrange(value)
df %>%
unnest_tokens(bigram, `df`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 == "said" | word2 == "said") %>%
gather() %>%
select(value) %>%
unique() %>%
arrange(value)
df %>% rbind(goblet_of_fire)
df <- df %>% rbind(goblet_of_fire)
rbind(df, goblet_of_fire)
df <- rbind(df, goblet_of_fire)
View(df)
df <- philosophers_stone
df <- as.data.frame(df)
goblet_of_fire <- goblet_of_fire
goblet_of_fire <- as.data.frame(goblet_of_fire)
View(goblet_of_fire)
df <- df %>% rbind(goblet_of_fire)
df <-  rbind(df,goblet_of_fire)
View(goblet_of_fire)
View(df)
df <- philosophers_stone
df <- philosophers_stone %>% as.data.frame()
df <- philosophers_stone %>% as.data.frame()
df %>%
unnest_tokens(bigram, `df`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 == "said" | word2 == "said") %>%
gather() %>%
select(value) %>%
unique() %>%
arrange(value)
View(df)
View(df)
df %>%
unnest_tokens(bigram, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 == "said" | word2 == "said") %>%
gather() %>%
select(value) %>%
unique() %>%
arrange(value)
colnames(df) <- "text"
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 == "said" | word2 == "said") %>%
gather() %>%
select(value) %>%
unique() %>%
arrange(value)
df <- goblet_of_fire %>% as.data.frame()
colnames(df) <- "text"
df %>%
unnest_tokens(bigram,`text`, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
select(word1, word2) %>%
filter(word1 == "said" | word2 == "said") %>%
gather() %>%
select(value) %>%
unique() %>%
arrange(value)
library(rattle)
rattle()
library(rattle)
rattle()
setwd("E:/School/R Work/SortingHat")
library(tidyverse)
library(zoo)
df <- read.csv("Book2.csv", header = FALSE)
View(df)
df <- separate(df, col = V1, into = c("left","right"), sep = "\\:", fill = "left")
df[df == ""] <- NA
View(df)
#Stores lines where dialogue is on the same line as character
DialgoueSameLine <- df[complete.cases(df),]
RestOfDialogue <- df[!complete.cases(df),]
RestOfDialogue$left <-  na.locf(RestOfDialogue$left)
RestOfDialogue <-  RestOfDialogue %>% na.omit()
cleanedDf <- rbind(RestOfDialogue, DialgoueSameLine)
View(cleanedDf)
df <- read.csv("Book2.csv", header = FALSE)
df <- separate(df, col = V1, into = c("left","right"), sep = "\\:", fill = "left")
View(df)
df <- read.csv("Book2.csv", header = FALSE)
df <- separate(df, col = V1, into = c("left","right"), sep = "\\:", fill = "left")
df[df == ""] <- NA
#Stores lines where dialogue is on the same line as character
DialgoueSameLine <- df[complete.cases(df),]
View(DialgoueSameLine)
RestOfDialogue <- df[!complete.cases(df),]
RestOfDialogue$left <-  na.locf(RestOfDialogue$left)
RestOfDialogue <-  RestOfDialogue %>% na.omit()
cleanedDf <- rbind(RestOfDialogue, DialgoueSameLine)
View(cleanedDf)
write.csv(cleanedDf, "DeathlyHallows.csv", row.names = FALSE)
